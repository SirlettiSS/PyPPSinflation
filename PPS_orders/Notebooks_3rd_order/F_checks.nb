(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    372551,       7863]
NotebookOptionsPosition[    361776,       7677]
NotebookOutlinePosition[    362117,       7692]
CellTagsIndexPosition[    362074,       7689]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Check of the Fs", "Title",
 CellChangeTimes->{{3.918386467261046*^9, 3.918386494353109*^9}, {
  3.920366441886058*^9, 
  3.920366445638297*^9}},ExpressionUUID->"bd1bd40e-8e34-4af5-8e05-\
e3441e089826"],

Cell[CellGroupData[{

Cell["Check of F0:", "Section",
 CellChangeTimes->{{3.9188786939824457`*^9, 3.918878710430184*^9}, {
   3.919073291591381*^9, 3.919073303169836*^9}, {3.919229679793322*^9, 
   3.91922968541656*^9}, {3.919238458253577*^9, 3.91923845879319*^9}, {
   3.919316629940363*^9, 3.919316630985497*^9}, 
   3.919325816045013*^9},ExpressionUUID->"732eb4ea-0e53-4460-9b20-\
061ed4962f19"],

Cell[TextData[{
 "We have:\nB=  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Gamma]", "E"], "+", 
    RowBox[{"ln", "(", "2", ")"}], " ", "-"}], TraditionalForm]],
  ExpressionUUID->"959179e6-ae81-45e1-9d79-be20c95a4f10"],
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]],
  CellChangeTimes->{
   3.9192297414598217`*^9, {3.919229949614521*^9, 3.919229959502371*^9}},
  ExpressionUUID->"bf71910a-7917-404e-ae3a-8748cefb2fbf"],
 "\n\[Alpha] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["\[Gamma]", "E"]}], "-", 
    RowBox[{"ln", "(", "2", ")"}], " ", "+", "2"}], TraditionalForm]],
  ExpressionUUID->"e4ddfb5b-ac9d-48d2-a2a4-3efeb18d8eff"],
 "\nthen the relations between B and \[Alpha] are: \nB = -\[Alpha]-",
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]],
  CellChangeTimes->{
   3.9192297414598217`*^9, {3.919229949614521*^9, 3.919229959502371*^9}, {
    3.9192300956441307`*^9, 3.9192300968938103`*^9}},ExpressionUUID->
  "a1757ff3-fb79-46e4-bb1d-74fd5d059353"],
 " + 2   and \[Alpha]= -B-",
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]],
  CellChangeTimes->{
   3.9192297414598217`*^9, {3.919229949614521*^9, 3.919229959502371*^9}, {
    3.9192300956441307`*^9, 3.9192300968938103`*^9}},ExpressionUUID->
  "5e487efd-1baf-407c-8dbc-b96800ccc71b"],
 " + 2."
}], "Text",
 CellChangeTimes->{{3.919316771977796*^9, 3.919316829322557*^9}, {
  3.919316904587514*^9, 
  3.9193169834842052`*^9}},ExpressionUUID->"041a21ee-c876-40e3-a88f-\
22e0e300a7c5"],

Cell["Let\[CloseCurlyQuote]s find  F0 both written with respect to B and \
\[Alpha]: ", "Text",
 CellChangeTimes->{{3.919317310662325*^9, 3.919317325672168*^9}, {
  3.919317396715803*^9, 
  3.9193174186874733`*^9}},ExpressionUUID->"6cf40c67-8701-42c9-8c35-\
424916340870"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[ImaginaryI]", " ", "u"}]], "u"], 
      RowBox[{"\[DifferentialD]", "u"}]}]}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"x", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.919322466904633*^9, 3.919322491434136*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ca65e952-8d31-47a1-bb26-76a0ce03d84a"],

Cell[BoxData[
 RowBox[{"Gamma", "[", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]], "Output",
 CellChangeTimes->{3.919322510634644*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"1d7b790a-d407-4163-8d14-5f83155bc761"]
}, Open  ]],

Cell[TextData[{
 "F0 = Gamma[0,-2 \[ImaginaryI] x] = ",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", "\[ImaginaryI]", " ", "u"}]], "u"], 
    RowBox[{"\[DifferentialD]", "u"}]}]}]],
  CellChangeTimes->{{3.918386800530422*^9, 3.91838680084583*^9}, {
   3.91838683804778*^9, 3.9183868792357483`*^9}, {3.918386918469885*^9, 
   3.918386940313368*^9}, {3.918387003774622*^9, 3.918387021730529*^9}, {
   3.9183870521502953`*^9, 3.918387056272254*^9}, {3.918387133859676*^9, 
   3.918387223359161*^9}, {3.918387254019533*^9, 3.918387307931315*^9}, {
   3.918387339667542*^9, 3.9183873424884253`*^9}, {3.918387405659487*^9, 
   3.918387441819631*^9}, {3.9183874746183558`*^9, 3.918387553650193*^9}, {
   3.918393861993878*^9, 3.918393866763637*^9}, {3.919228883925292*^9, 
   3.919228884588935*^9}},ExpressionUUID->
  "1c3a876f-46ca-4392-9b51-9e8780fa51f5"],
 " expressed with B = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Gamma]", "E"], "+", 
    RowBox[{"ln", "(", "2", ")"}], " ", "-"}], TraditionalForm]],
  ExpressionUUID->"750dfb45-7398-4185-9e1e-92d0d90c08cd"],
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]],
  CellChangeTimes->{
   3.9192297414598217`*^9, {3.919229949614521*^9, 3.919229959502371*^9}},
  ExpressionUUID->"b76f87be-0341-4b95-b2a8-f6ddb835a730"]
}], "Text",
 CellChangeTimes->{{3.91922999396736*^9, 3.9192300514877872`*^9}, {
  3.919317643893071*^9, 
  3.919317661444257*^9}},ExpressionUUID->"9c40c974-ed39-4fa9-bf33-\
051d42471636"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "/.", 
     RowBox[{"EulerGamma", "\[Rule]", 
      RowBox[{
       RowBox[{"+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]}], "+", "B", "-", 
       RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{
  3.9192297414598217`*^9, {3.919229949614521*^9, 3.919229959502371*^9}, {
   3.9192300956441307`*^9, 3.9192300968938103`*^9}, {3.919322676149914*^9, 
   3.919322686103044*^9}, {3.919322797438958*^9, 3.919322797518301*^9}, {
   3.919322854505188*^9, 3.9193228549414587`*^9}, {3.9193230671674223`*^9, 
   3.919323067202673*^9}, {3.919323507261746*^9, 3.9193235075069513`*^9}, {
   3.919323970756588*^9, 3.919323970975903*^9}, {3.91932428074853*^9, 
   3.919324284314415*^9}, {3.919324508164222*^9, 3.9193245322446747`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"9efbd545-95ea-4af2-aec2-7b108325d7e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "B"}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{
  3.919229746691544*^9, 3.919229961473287*^9, 3.919230097435751*^9, {
   3.9193226824311123`*^9, 3.919322686882144*^9}, 3.919322798604767*^9, 
   3.919322855916606*^9, 3.9193230718657017`*^9, 3.9193235081055517`*^9, 
   3.919323976922227*^9, 3.9193242847273703`*^9, {3.919324528436215*^9, 
   3.919324532713443*^9}, 3.919325449784049*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"112197a0-8c96-4b65-b653-4c8046575e92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "/.", 
     RowBox[{"EulerGamma", "\[Rule]", 
      RowBox[{"2", "-", "\[Alpha]", "-", 
       RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.919238290442977*^9, 3.919238326959989*^9}, {
  3.919316683842181*^9, 3.919316693786511*^9}, {3.9193226901151*^9, 
  3.919322690714847*^9}, {3.919323069162138*^9, 3.919323069271593*^9}, {
  3.919323504575489*^9, 3.919323505187129*^9}, {3.919323974063363*^9, 
  3.919323974176796*^9}, {3.919324276081399*^9, 3.919324291388198*^9}, {
  3.919324572265863*^9, 3.919324572338304*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"e9e5fec5-9b11-4cc8-a628-71ea703c4525"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", "\[Alpha]", "-", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{
  3.919238291903496*^9, 3.919238328516903*^9, {3.919316685262644*^9, 
   3.919316694641358*^9}, 3.919322691314282*^9, 3.919323074380213*^9, 
   3.919323510719139*^9, 3.919323974737629*^9, 3.919324291894594*^9, 
   3.919324572776575*^9, 3.919325452463151*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"07b04a08-ac91-45ee-b5e7-5322c013b1c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check of F1:", "Section",
 CellChangeTimes->{{3.9188786939824457`*^9, 3.918878710430184*^9}, {
   3.919073291591381*^9, 3.919073303169836*^9}, {3.919229679793322*^9, 
   3.91922968541656*^9}, {3.919238458253577*^9, 3.91923845879319*^9}, {
   3.919316629940363*^9, 3.919316630985497*^9}, 3.919325816045013*^9, {
   3.9203646737532263`*^9, 
   3.92036467385499*^9}},ExpressionUUID->"8241ecec-f20f-4909-9483-\
5c0a3e053684"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"+", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
     RowBox[{"Log", "[", "u", "]"}], 
     RowBox[{"\[DifferentialD]", "u"}]}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{"x", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9203648623356657`*^9, 3.920364906503853*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"e79aa541-3ace-49de-9875-e3745a51285c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"HypergeometricPFQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"12", " ", 
      SuperscriptBox["EulerGamma", "2"]}], "-", 
     RowBox[{"12", " ", "\[ImaginaryI]", " ", "EulerGamma", " ", "\[Pi]"}], 
     "-", 
     SuperscriptBox["\[Pi]", "2"], "+", 
     RowBox[{"12", " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
     RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      RowBox[{"Log", "[", 
       FractionBox["x", "2"], "]"}]}]}], ")"}]}], "+", 
  RowBox[{"EulerGamma", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"ExpIntegralEi", "[", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], "+", 
     RowBox[{"Log", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.920364984693568*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"b5117a72-b83d-4bee-af11-f49b36fd252d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
          RowBox[{"HypergeometricPFQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "24"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"12", " ", 
             SuperscriptBox["EulerGamma", "2"]}], "-", 
            RowBox[{
            "12", " ", "\[ImaginaryI]", " ", "EulerGamma", " ", "\[Pi]"}], 
            "-", 
            SuperscriptBox["\[Pi]", "2"], "+", 
            RowBox[{"12", " ", 
             SuperscriptBox[
              RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
            RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
             RowBox[{"Log", "[", 
              FractionBox["x", "2"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"EulerGamma", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Log", "[", "x", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], "+", 
            RowBox[{"Log", "[", 
             RowBox[{"4", " ", "x"}], "]"}]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "/.", 
     RowBox[{"EulerGamma", "\[Rule]", 
      RowBox[{
       RowBox[{"+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]}], "+", "B", "-", 
       RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{3.9203650641798353`*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"778ced74-be6f-444c-8b8a-794553661aec"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["B", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "12"], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}]], "Output",
 CellChangeTimes->{3.920365065668171*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"e4c8458a-cb1a-423b-8838-be2abdbfcadf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["B", "2"], "2"], "+", 
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], "12"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}], ")"}], " ", "/.", " ", 
   RowBox[{"B", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"-", "\[Alpha]"}], "-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "+", "2"}]}]}], " ", "//",
   "Expand"}]], "Input",
 CellChangeTimes->{{3.922856739620232*^9, 3.922856768488653*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"22ba770f-91d7-426b-9cf7-50ad7833fef9"],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "24"], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
  RowBox[{"2", " ", "\[Alpha]"}], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
  FractionBox[
   SuperscriptBox["\[Alpha]", "2"], "2"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}]], "Output",
 CellChangeTimes->{{3.9228567644333057`*^9, 3.9228567689822283`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"ad32f1aa-b65b-43ae-bacb-5f738e943fd9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check of F2:", "Section",
 CellChangeTimes->{{3.9188786939824457`*^9, 3.918878710430184*^9}, {
   3.919073291591381*^9, 3.919073303169836*^9}, {3.919229679793322*^9, 
   3.91922968541656*^9}, {3.919238458253577*^9, 3.91923845879319*^9}, {
   3.919316629940363*^9, 3.919316630985497*^9}, 3.919325816045013*^9, {
   3.9203646737532263`*^9, 3.92036467385499*^9}, {3.920365144411997*^9, 
   3.920365144499449*^9}},ExpressionUUID->"34637003-3ebd-4b5b-bd35-\
970361c73b30"],

Cell[TextData[{
 "We have:\nB=  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Gamma]", "E"], "+", 
    RowBox[{"ln", "(", "2", ")"}], " ", "-"}], TraditionalForm]],
  ExpressionUUID->"e898c909-3103-4bf4-97de-ebe062cd94b3"],
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]],
  CellChangeTimes->{
   3.9192297414598217`*^9, {3.919229949614521*^9, 3.919229959502371*^9}},
  ExpressionUUID->"2f7e4543-fdf2-4393-8ec2-919b405f1a1c"],
 "\n\[Alpha] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["\[Gamma]", "E"]}], "-", 
    RowBox[{"ln", "(", "2", ")"}], " ", "+", "2"}], TraditionalForm]],
  ExpressionUUID->"73789d29-e362-45e9-bd19-f2db961710d0"],
 "\nthen the relations between B and \[Alpha] are: \nB = -\[Alpha]-",
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]],
  CellChangeTimes->{
   3.9192297414598217`*^9, {3.919229949614521*^9, 3.919229959502371*^9}, {
    3.9192300956441307`*^9, 3.9192300968938103`*^9}},ExpressionUUID->
  "e39dc640-a826-48e5-9cfe-d94c34955c1a"],
 " + 2   and \[Alpha] = -B-",
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]],
  CellChangeTimes->{
   3.9192297414598217`*^9, {3.919229949614521*^9, 3.919229959502371*^9}, {
    3.9192300956441307`*^9, 3.9192300968938103`*^9}},ExpressionUUID->
  "f5b3e065-1e9e-490d-8d57-f89bba949256"],
 " + 2."
}], "Text",
 CellChangeTimes->{{3.919316771977796*^9, 3.919316829322557*^9}, {
   3.919316904587514*^9, 3.9193169834842052`*^9}, 
   3.920364950973963*^9},ExpressionUUID->"7dfe1a8b-307a-43b8-9ede-\
e99559fe8c50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"+", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
     SuperscriptBox[
      RowBox[{"Log", "[", "u", "]"}], "2"], 
     RowBox[{"\[DifferentialD]", "u"}]}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{"x", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9203648623356657`*^9, 3.920364906503853*^9}, {
  3.920365184625781*^9, 3.9203651851570683`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"b9eab174-89a4-4543-9918-e3433dc01564"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "24"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "8"}], " ", 
     SuperscriptBox["EulerGamma", "3"]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[Pi]", "3"]}], "-", 
    RowBox[{"96", " ", "\[ImaginaryI]", " ", "x", " ", 
     RowBox[{"HypergeometricPFQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
    RowBox[{"12", " ", "\[ImaginaryI]", " ", 
     SuperscriptBox["EulerGamma", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"Log", "[", "2", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
    RowBox[{"2", " ", "EulerGamma", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], "+", 
       RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"Log", "[", "2", "]"}]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "2", "]"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"Log", "[", "4", "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Log", "[", "x", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"24", " ", "\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"HypergeometricPFQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Log", "[", "x", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "EulerGamma"}], "+", 
          RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "-", 
          RowBox[{"6", " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], "+", 
          RowBox[{"Log", "[", "64", "]"}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"Log", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Log", "[", "2", "]"}], "3"], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.920364984693568*^9, 3.920365284662991*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"80340655-5f36-4063-a42e-c575ea368f36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "24"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "8"}], " ", 
            SuperscriptBox["EulerGamma", "3"]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[Pi]", "3"]}], "-", 
           RowBox[{"96", " ", "\[ImaginaryI]", " ", "x", " ", 
            RowBox[{"HypergeometricPFQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", 
            SuperscriptBox["EulerGamma", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               RowBox[{"Log", "[", "2", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
            SuperscriptBox[
             RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", "EulerGamma", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Pi]", "2"], "+", 
              RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
               RowBox[{"Log", "[", "2", "]"}]}], "-", 
              RowBox[{"12", " ", 
               SuperscriptBox[
                RowBox[{"Log", "[", "2", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Pi]", "2"], " ", 
            RowBox[{"Log", "[", "4", "]"}]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Log", "[", "x", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"24", " ", "\[ImaginaryI]", " ", "x", " ", 
               RowBox[{"HypergeometricPFQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
                 RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], 
              "+", 
              RowBox[{
               RowBox[{"Log", "[", "x", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", "EulerGamma"}], "+", 
                 RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "-", 
                 RowBox[{"6", " ", 
                  RowBox[{"ExpIntegralEi", "[", 
                   RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], 
                 "+", 
                 RowBox[{"Log", "[", "64", "]"}], "+", 
                 RowBox[{"4", " ", 
                  RowBox[{"Log", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Log", "[", "2", "]"}], "3"], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "/.", 
     RowBox[{"EulerGamma", "\[Rule]", 
      RowBox[{
       RowBox[{"+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]}], "+", "B", "-", 
       RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{
  3.9203650641798353`*^9, {3.920365193695746*^9, 3.920365197017427*^9}, 
   3.920365295361717*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"4297d214-b5b5-4cea-8eaa-86eba21590e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["B", "3"], "3"]}], "-", 
  FractionBox[
   RowBox[{"B", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "6"], "-", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "x"}], "+", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "3"], "3"], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Zeta", "[", "3", "]"}]}], "3"]}]], "Output",
 CellChangeTimes->{3.920365065668171*^9, 3.920365296911089*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"3dfc9b3e-c287-49c8-8dee-4c4a34ab26d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["B", "3"], "3"]}], "-", 
     FractionBox[
      RowBox[{"B", " ", 
       SuperscriptBox["\[Pi]", "2"]}], "6"], "-", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "x"}], "+", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "x", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "3"], "3"], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Zeta", "[", "3", "]"}]}], "3"]}], ")"}], " ", "/.", "  ", 
   RowBox[{"B", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"-", "\[Alpha]"}], "-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "+", "2"}]}]}], " ", "//",
   "Expand"}]], "Input",
 CellChangeTimes->{{3.922856841394024*^9, 3.922856850212265*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"2eeb20d9-730a-44a5-9e67-7225165b57bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["8", "3"]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "+", 
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "6"], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Pi]", "3"]}], "24"], "-", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "x"}], "+", 
  RowBox[{"4", " ", "\[Alpha]"}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], " ", "\[Alpha]"}], "12"], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  FractionBox[
   SuperscriptBox["\[Alpha]", "3"], "3"], "+", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "3"], "3"], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Zeta", "[", "3", "]"}]}], "3"]}]], "Output",
 CellChangeTimes->{3.922856850764192*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"3914aa81-f723-4180-838c-f15e23c89ea7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check of F00: ", "Section",
 CellChangeTimes->{{3.919317500122892*^9, 3.919317508731094*^9}, 
   3.919317541976685*^9},ExpressionUUID->"18632fee-cbde-487d-b4d0-\
7301422430ce"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s find an expression for F00 = ",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "u", "\[Infinity]"], 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", "\[ImaginaryI]", " ", "t"}]], "t"], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "u"}]}]}]],ExpressionUUID->
  "e166eeb2-6b27-48b4-af21-c6e1f7e8895f"]
}], "Text",
 CellChangeTimes->{{3.9193175460553923`*^9, 
  3.919317553440346*^9}},ExpressionUUID->"252ffd23-3741-4064-b25b-\
445507a1e4b1"],

Cell["The integrand is:", "Text",
 CellChangeTimes->{{3.9193177451124697`*^9, 
  3.919317747949738*^9}},ExpressionUUID->"d38df616-95cd-41a5-a0a3-\
dc92b4294c4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "+", "\[Alpha]", "-", 
       RowBox[{"Log", "[", "u", "]"}]}], ")"}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{
  3.919317590714859*^9, 3.919317719741623*^9, 3.919322708928938*^9, 
   3.91932286743274*^9, 3.919323083952794*^9, 3.9193235178876667`*^9, 
   3.919323667351636*^9, 3.919323708113459*^9, 3.919323811360392*^9, 
   3.9193239859917097`*^9, 3.9193243007581863`*^9, 3.919325475796048*^9, {
   3.9193255061764517`*^9, 3.919325508787848*^9}, {3.9193261836787558`*^9, 
   3.919326184766816*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"b0efa3ac-e835-402f-b712-b6d983b0fb23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]]}], "u"]}], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]], " ", "\[Pi]"}], 
   RowBox[{"2", " ", "u"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]], " ", 
    "\[Alpha]"}], "u"], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]], " ", 
    RowBox[{"Log", "[", "u", "]"}]}], "u"]}]], "Output",
 CellChangeTimes->{
  3.919317721772584*^9, 3.9193227111618*^9, 3.9193228683163977`*^9, 
   3.9193230845549192`*^9, 3.919323518343382*^9, 3.9193236682687597`*^9, 
   3.919323709717689*^9, 3.919323811910185*^9, 3.9193239864353113`*^9, 
   3.919324126515169*^9, 3.919324302498332*^9, {3.919325456461928*^9, 
   3.919325478394639*^9}, 3.919325514371458*^9, 3.919326185526409*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"8a6b4f50-bf11-463d-9b3e-126e74423bc9"]
}, Open  ]],

Cell["Then we integrate: ", "Text",
 CellChangeTimes->{{3.9193177532218733`*^9, 
  3.91931775676616*^9}},ExpressionUUID->"53250064-f022-4c05-840d-\
6b78323dfe25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]]}], "u"]}], 
       "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]], " ", 
         "\[Pi]"}], 
        RowBox[{"2", " ", "u"}]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]], " ", 
         "\[Alpha]"}], "u"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]], " ", 
         RowBox[{"Log", "[", "u", "]"}]}], "u"]}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", " ", "x", ",", 
        RowBox[{"+", "\[Infinity]"}]}], "}"}]}], "]"}], "/.", 
    RowBox[{"EulerGamma", "\[Rule]", 
     RowBox[{"2", "-", "\[Alpha]", "-", 
      RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{"x", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919317767846498*^9, 3.9193177920752573`*^9}, 
   3.9193224061531887`*^9, {3.919322520992474*^9, 3.9193225628999987`*^9}, {
   3.919322719207554*^9, 3.9193227387144337`*^9}, {3.9193228763014793`*^9, 
   3.919322885032076*^9}, 3.9193230933031588`*^9, {3.919323527135083*^9, 
   3.919323527465205*^9}, {3.919323686950089*^9, 3.9193237162911253`*^9}, 
   3.9193238218865757`*^9, 3.9193239933047657`*^9, 3.9193243146648207`*^9, 
   3.9193254897433863`*^9, 3.919325521897132*^9, 3.9193256051498623`*^9, {
   3.9193256449521713`*^9, 3.9193256789725637`*^9}, 3.9193257303254128`*^9, {
   3.919325842348267*^9, 3.919325856488243*^9}, {3.919326212772171*^9, 
   3.919326223227001*^9}, 3.91932626840518*^9, 3.919327092429796*^9, 
   3.919356906517907*^9},
 CellLabel->
  "In[143]:=",ExpressionUUID->"28da2d6e-ac99-4226-84e9-10f27c1cc2cf"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "24"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "12"}], " ", 
     SuperscriptBox["EulerGamma", "2"]}], "+", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"7", " ", "\[Pi]"}], "-", 
       RowBox[{"12", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"48", " ", "\[ImaginaryI]", " ", "x", " ", 
     RowBox[{"HypergeometricPFQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "-", 
    
    RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     RowBox[{"Log", "[", "2", "]"}]}], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "2", "]"}], "2"]}], "-", 
    RowBox[{"12", " ", "\[ImaginaryI]", " ", "EulerGamma", " ", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Log", "[", "4", "]"}]}]}], ")"}]}], "-", 
    RowBox[{"12", " ", 
     RowBox[{"Log", "[", "x", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "EulerGamma"}], "+", 
       RowBox[{"Log", "[", "4", "]"}], "+", 
       RowBox[{"Log", "[", "x", "]"}]}], ")"}]}], "+", 
    RowBox[{"12", " ", 
     RowBox[{"CosIntegral", "[", 
      RowBox[{"2", " ", "x"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"4", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
       RowBox[{"2", " ", "\[Alpha]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]}], ")"}]}], "-", 
    RowBox[{"12", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "\[ImaginaryI]"}], "+", "\[Pi]", "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]}], ")"}], " ", 
     RowBox[{"SinIntegral", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.919326227105454*^9, 3.919326521537306*^9, 
  3.919327469404893*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"6d754ccb-6616-4708-8a18-bfcb5e90bbc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "24"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "12"}], " ", 
            SuperscriptBox["EulerGamma", "2"]}], "+", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"7", " ", "\[Pi]"}], "-", 
              RowBox[{"12", " ", "\[ImaginaryI]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"48", " ", "\[ImaginaryI]", " ", "x", " ", 
            RowBox[{"HypergeometricPFQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], 
             "]"}]}], "-", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
            RowBox[{"Log", "[", "2", "]"}]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox[
             RowBox[{"Log", "[", "2", "]"}], "2"]}], "-", 
           RowBox[{"12", " ", "\[ImaginaryI]", " ", "EulerGamma", " ", 
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Log", "[", "4", "]"}]}]}], ")"}]}], "-", 
           RowBox[{"12", " ", 
            RowBox[{"Log", "[", "x", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "EulerGamma"}], "+", 
              RowBox[{"Log", "[", "4", "]"}], "+", 
              RowBox[{"Log", "[", "x", "]"}]}], ")"}]}], "+", 
           RowBox[{"12", " ", 
            RowBox[{"CosIntegral", "[", 
             RowBox[{"2", " ", "x"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
              RowBox[{"2", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Log", "[", "x", "]"}]}]}], ")"}]}], "-", 
           RowBox[{"12", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "\[ImaginaryI]"}], "+", "\[Pi]", "-", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               RowBox[{"Log", "[", "x", "]"}]}]}], ")"}], " ", 
            RowBox[{"SinIntegral", "[", 
             RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "/.", 
     RowBox[{"EulerGamma", "\[Rule]", 
      RowBox[{"2", "-", "\[Alpha]", "-", 
       RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{
  3.9193178241039047`*^9, {3.919322350229896*^9, 3.919322365435029*^9}, {
   3.919322746025509*^9, 3.919322746242646*^9}, 3.91932292096445*^9, {
   3.919323062023519*^9, 3.9193230621491833`*^9}, {3.9193235382496634`*^9, 
   3.919323538365018*^9}, {3.9193240602134733`*^9, 3.919324060338479*^9}, {
   3.919324323120735*^9, 3.919324323221903*^9}, {3.91932686360281*^9, 
   3.9193268657391872`*^9}, {3.919326909174184*^9, 3.919326914358699*^9}, {
   3.919326951649508*^9, 3.919326951738513*^9}, 3.919327593942021*^9},
 CellLabel->
  "In[145]:=",ExpressionUUID->"00b26f78-7987-4d7e-87b6-4640656bd63f"],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
  FractionBox[
   RowBox[{"7", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "24"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
  RowBox[{"\[Pi]", " ", "x"}], "-", 
  RowBox[{"2", " ", "\[Alpha]"}], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "+", 
  FractionBox[
   SuperscriptBox["\[Alpha]", "2"], "2"], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"\[Alpha]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}]], "Output",
 CellChangeTimes->{{3.919322360415947*^9, 3.9193223658415403`*^9}, 
   3.9193227468219337`*^9, 3.919322921938188*^9, 3.919323169350415*^9, 
   3.919323538814011*^9, 3.919324060898325*^9, 3.919324323665615*^9, 
   3.9193268670626507`*^9, {3.9193269100960283`*^9, 3.919326914929598*^9}, 
   3.919326952704064*^9, 3.919327595020163*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"59210783-57a3-46b5-acf6-8ee0c3751d09"]
}, Open  ]],

Cell["\<\
This solution is slightly different from the one fnd by Mario:\
\>", "Text",
 CellChangeTimes->{{3.919327032106373*^9, 
  3.919327045821622*^9}},ExpressionUUID->"75ab2a21-27fb-45d0-8c7f-\
fd89274dfc2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "-", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
     FractionBox[
      RowBox[{"7", " ", 
       SuperscriptBox["\[Pi]", "2"]}], "24"], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
     RowBox[{"\[Pi]", " ", "x"}], "-", 
     RowBox[{"2", " ", "\[Alpha]"}], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "+", 
     FractionBox[
      SuperscriptBox["\[Alpha]", "2"], "2"], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}], ")"}], " ", "-", 
   RowBox[{"(", 
    RowBox[{"2", "-", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], "8"], "-", 
     RowBox[{"\[Pi]", " ", "x"}], "-", 
     RowBox[{"2", " ", "\[Alpha]"}], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "+", 
     FractionBox[
      SuperscriptBox["\[Alpha]", "2"], "2"], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}], ")"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.9193270541209803`*^9, 3.9193270723594217`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"a0366b17-6fa4-4d11-9562-1e407bd97b6e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "6"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.919327073290928*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"b03c8f14-e201-4b38-85c2-b668e8d4c925"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another kind of check for F00", "Section",
 CellChangeTimes->{{3.9193246189296618`*^9, 3.91932462874504*^9}, {
  3.919325433136373*^9, 3.919325442108395*^9}, {3.919325927023486*^9, 
  3.919325927930067*^9}},ExpressionUUID->"ef2bace2-6f95-4030-93a9-\
4647338be956"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
     RowBox[{"(", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]}], "]"}], 
      ")"}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{
  3.919324646080793*^9, {3.9193247153214293`*^9, 3.9193247173088703`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"16d9ef8d-46ea-4724-af7c-f5c72c298159"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]}], "]"}]}], 
  "u"]], "Output",
 CellChangeTimes->{3.919324647342145*^9, 3.91932472314468*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"7f7362f8-bce7-470e-ade6-bffd0a819fd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]}], "]"}]}], 
       "u"], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", " ", "x", ",", 
        RowBox[{"+", "\[Infinity]"}]}], "}"}]}], "]"}], "/.", 
    RowBox[{"EulerGamma", "\[Rule]", 
     RowBox[{"2", "-", "\[Alpha]", "-", 
      RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{"x", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.9193246661936493`*^9, {3.919324726667395*^9, 3.919324727072858*^9}, 
   3.919324767303977*^9},
 CellLabel->
  "In[110]:=",ExpressionUUID->"a305525a-e24a-4361-96f0-9fdef06f23de"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox["\[Pi]", "2"]}], "-", 
    RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], "2"]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"4", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
       RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], "+", 
    RowBox[{"32", " ", "\[ImaginaryI]", " ", "x", " ", 
     RowBox[{"HypergeometricPFQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
    
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"Log", "[", "x", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], "+", 
       RowBox[{"Log", "[", "x", "]"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{
      SuperscriptBox["Hypergeometric1F1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"0", ",", "1", ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.919324667819591*^9, 3.919324739062675*^9, 
  3.9193247822160482`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"2347a6e7-37e6-4005-8b71-29550fe11f0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "8"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["\[Pi]", "2"]}], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
              RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], 
           "+", 
           RowBox[{"32", " ", "\[ImaginaryI]", " ", "x", " ", 
            RowBox[{"HypergeometricPFQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], 
             "]"}]}], "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"Log", "[", "x", "]"}]}], "-", 
           RowBox[{"4", " ", 
            RowBox[{"Log", "[", "x", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"CosIntegral", "[", 
                RowBox[{"2", " ", "x"}], "]"}]}], "+", 
              RowBox[{"Log", "[", "x", "]"}], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               RowBox[{"SinIntegral", "[", 
                RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{"4", " ", 
            RowBox[{
             SuperscriptBox["Hypergeometric1F1", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"0", ",", "1", ",", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], 
             "]"}]}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "  ", "/.", 
     RowBox[{"EulerGamma", "\[Rule]", 
      RowBox[{"2", "-", "\[Alpha]", "-", 
       RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.91932483550504*^9, 3.919324846524699*^9}, {
  3.919324996174561*^9, 3.91932499632267*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"e095e99c-e081-4112-b60c-ae79c57666ae"],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "8"], "-", 
  RowBox[{"\[Pi]", " ", "x"}], "-", 
  RowBox[{"2", " ", "\[Alpha]"}], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "+", 
  FractionBox[
   SuperscriptBox["\[Alpha]", "2"], "2"], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"\[Alpha]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"], "2"], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{
    SuperscriptBox["Hypergeometric1F1", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "x", " ", 
   RowBox[{
    SuperscriptBox["Hypergeometric1F1", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"0", ",", "1", ",", "0"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.919324836868473*^9, 3.919324847144745*^9}, 
   3.919324996769025*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"a1fb089e-f038-4683-89b0-e6eb9690fa8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{
     SuperscriptBox["Hypergeometric1F1", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "+", 
   RowBox[{"\[ImaginaryI]", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["Hypergeometric1F1", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"0", ",", "1", ",", "0"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919324948903421*^9, 3.919325007303739*^9}, {
  3.919325363868672*^9, 3.9193253708692503`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"41ac9869-47fd-45a5-8193-81210b3a415c"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.9193253714023333`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"550ed9d5-86de-4c31-a284-3d9a0e835922"]
}, Open  ]],

Cell[TextData[{
 "Then:\n",
 Cell[BoxData[
  RowBox[{"2", "-", 
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "8"], "-", 
   RowBox[{"\[Pi]", " ", "x"}], "-", 
   RowBox[{"2", " ", "\[Alpha]"}], "+", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "+", 
   FractionBox[
    SuperscriptBox["\[Alpha]", "2"], "2"], "+", 
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "x", "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
    RowBox[{"Log", "[", "x", "]"}]}], "-", 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
    RowBox[{"Log", "[", "x", "]"}]}], "-", 
   RowBox[{"\[Alpha]", " ", 
    RowBox[{"Log", "[", "x", "]"}]}], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}]],
  CellChangeTimes->{{3.919324836868473*^9, 3.919324847144745*^9}, 
    3.919324996769025*^9},ExpressionUUID->
  "d3c0a5b3-1c59-4362-ad39-dcf946db8f0d"]
}], "Text",
 CellChangeTimes->{{3.919325374969843*^9, 
  3.9193253917132063`*^9}},ExpressionUUID->"7c92e33f-c62a-416b-877d-\
f3e9d0bfa28b"],

Cell[TextData[{
 "In total agreement with the result find by Mario: \n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]], " "}], "u"], 
      
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "u", "\[Infinity]"], 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]], "t"], 
         RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "u"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"EulerGamma", "+", 
         RowBox[{"Log", "[", 
          RowBox[{"2", " ", "I", " ", "x"}], "]"}], "+", 
         RowBox[{"Gamma", "[", 
          RowBox[{"0", ",", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], ")"}], 
       "*", 
       RowBox[{"Gamma", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], 
      "+", 
      RowBox[{
       FractionBox["1", "2"], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Zeta", "[", "2", "]"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"EulerGamma", "+", 
            RowBox[{"Log", "[", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "I", " ", "x"}], "]"}]}], ")"}], 
          "2"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "0"}], "\[Infinity]"], 
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"n", "=", "0"}], "m"], 
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "I", " ", "x"}], ")"}], "n"], 
             RowBox[{"Factorial", "[", "n", "]"}]], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"m", "+", "1"}], ")"}], "2"]], ")"}]}]}], "+", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", "1"}], "\[Infinity]"], 
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", "I", " ", "x"}], ")"}], "k"], 
         RowBox[{
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"Factorial", "[", "k", "]"}]}]], ")"}]}]}], " ", 
     "\[TildeEqual]", " ", 
     RowBox[{"2", "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
      FractionBox[
       SuperscriptBox["\[Pi]", "2"], "8"], "-", 
      RowBox[{"\[Pi]", " ", "x"}], "-", 
      RowBox[{"2", " ", "\[Alpha]"}], "+", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "+", 
      FractionBox[
       SuperscriptBox["\[Alpha]", "2"], "2"], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}]}]}], " ", ";"}]],
  CellChangeTimes->{{3.9192386518210497`*^9, 3.919238661333716*^9}},
  ExpressionUUID->"abfebec1-9aad-4185-b2e2-32d0746fe2bd"]
}], "Text",
 CellChangeTimes->{{3.919325394646723*^9, 
  3.919325416135598*^9}},ExpressionUUID->"4c928773-269a-48b0-a5ff-\
0b451c1039df"],

Cell["\<\
Let\[CloseCurlyQuote]s switch from \[Alpha] to B, and then we find F00 as \
expressed by 2205.12608:\
\>", "Text",
 CellChangeTimes->{{3.919313788394483*^9, 3.919313808002802*^9}, {
  3.9193138822170277`*^9, 3.9193138879750633`*^9}, {3.919313965076455*^9, 
  3.9193139794068127`*^9}, {3.919315185231627*^9, 
  3.919315201444398*^9}},ExpressionUUID->"fa5b116f-f171-4a80-9b49-\
9e0caa58c129"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "-", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], "8"], "-", 
     RowBox[{"\[Pi]", " ", "x"}], "-", 
     RowBox[{"2", " ", "\[Alpha]"}], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "+", 
     FractionBox[
      SuperscriptBox["\[Alpha]", "2"], "2"], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}], ")"}], " ", "/.", 
   RowBox[{"\[Alpha]", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"-", "B"}], " ", "-", " ", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "+", "2"}]}]}], " ", "//",
   "Expand"}]], "Input",
 CellChangeTimes->{{3.919238716648355*^9, 3.9192387950797777`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"16f3156b-ce36-43b5-980c-f78378bf8c2a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["B", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "4"], "+", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "x"}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "B", " ", "x"}], "+", 
  RowBox[{"B", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}]], "Output",
 CellChangeTimes->{{3.919238760020973*^9, 3.919238795668645*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"212bbdf5-0e27-47e2-a5df-7ac763f2eeb0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check of F10: ", "Section",
 CellChangeTimes->{{3.919317500122892*^9, 3.919317508731094*^9}, 
   3.919317541976685*^9, {3.920541817287435*^9, 3.9205418173881807`*^9}, {
   3.9205466058604813`*^9, 
   3.920546607387061*^9}},ExpressionUUID->"7a8af83d-9477-4918-b290-\
b22e0807101e"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
   RowBox[{"Log", "[", "u", "]"}], 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "u", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[ImaginaryI]", " ", "t"}]], "t"], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], 
   RowBox[{"\[DifferentialD]", "u"}]}]}]], "Input",ExpressionUUID->"d60b7627-\
a0f4-43a5-bce1-3a497cc72950"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
         RowBox[{"Log", "[", "u", "]"}], 
         RowBox[{"(", 
          RowBox[{"Gamma", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]}], "]"}], 
          ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "/.", 
     " ", 
     RowBox[{"EulerGamma", "\[Rule]", 
      FormBox[
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], "-", 
        RowBox[{"ln", "(", "2", ")"}], "+", "2"}],
       TraditionalForm]}]}], " ", ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"u", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.9205472197651033`*^9, 3.92054722888612*^9}, {
  3.92054737388873*^9, 3.920547374861415*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"413ae50c-a2ec-4ac1-a217-1498cdbbc830"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   RowBox[{"Log", "[", "u", "]"}]}], "+", 
  RowBox[{"\[Pi]", " ", 
   RowBox[{"Log", "[", "u", "]"}]}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "u", "]"}]}], "u"], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
    RowBox[{"Log", "[", "u", "]"}]}], 
   RowBox[{"2", " ", "u"}]], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]", " ", 
   RowBox[{"Log", "[", "u", "]"}]}], "+", 
  FractionBox[
   RowBox[{"\[Alpha]", " ", 
    RowBox[{"Log", "[", "u", "]"}]}], "u"], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "u", "]"}], "2"]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "u", "]"}], "2"], "u"]}]], "Output",
 CellChangeTimes->{
  3.920547235672306*^9, {3.9205473767002687`*^9, 3.920547380527944*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"048e06da-4720-4f57-8bec-fa31b1f26867"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "x", "1"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"Log", "[", "u", "]"}]}], "+", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Log", "[", "u", "]"}]}], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", "u", "]"}]}], "u"], "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
          RowBox[{"Log", "[", "u", "]"}]}], 
         RowBox[{"2", " ", "u"}]], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]", " ", 
         RowBox[{"Log", "[", "u", "]"}]}], "+", 
        FractionBox[
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"Log", "[", "u", "]"}]}], "u"], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "u", "]"}], "2"]}], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"Log", "[", "u", "]"}], "2"], "u"]}], ")"}], 
      RowBox[{"\[DifferentialD]", "u"}]}]}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.920546744279859*^9, 3.920546758208102*^9}, {
  3.9205472505573606`*^9, 3.920547278947101*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"358f6f1d-6e70-493c-b2c3-a9e4850410bf"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "\[ImaginaryI]"}], "-", "\[Pi]", "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", 
    RowBox[{"\[Pi]", " ", "x"}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "-", 
    RowBox[{"\[Pi]", " ", "x", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "+", 
    SuperscriptBox[
     RowBox[{"Log", "[", "x", "]"}], "2"], "-", 
    RowBox[{
     FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", "\[Alpha]", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "3"], "3"]}], ",", 
   RowBox[{"x", "\[NotEqual]", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.920547261290845*^9, 3.9205472847316236`*^9}, 
   3.9205473964053717`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"297f5646-7679-47a6-9ee9-8b602a6934a6"]
}, Open  ]],

Cell["\<\
Here we plot the full and the approximated integrands in order to understand \
if our approximation works. \
\>", "Text",
 CellChangeTimes->{{3.937370830084549*^9, 
  3.937370859857793*^9}},ExpressionUUID->"f5770a08-d834-4c03-8414-\
b2e66415b544"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Re", "[", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "x"}]], "x"], 
     RowBox[{"Log", "[", "x", "]"}], 
     RowBox[{"(", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}], 
      ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gg", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "+", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "x"], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], 
      RowBox[{"2", " ", "x"}]], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "+", 
     FractionBox[
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "x"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "x"]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.0001", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"gg", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.0001", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logplot1", " ", "=", " ", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.0001", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logplot2", " ", "=", " ", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"gg", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.0001", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"logplot1", ",", "logplot2"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.937370630126741*^9, 3.93737079641616*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"2a1e7767-c18c-4c72-b4d6-9b9fc0e664ad"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwdlHk0Vf3bxg+hSRkyVzrmIXMSYd+3eYgnCR1TxiRTHBKlOmXOdAgRlaSn
kswVpQ6VoULGQipRpvDIGJHfed/9z16fdX3ua32/a+19i7mftD7GSiKRaCwk
0v+9WQ8J+9rfbQbS/z98tes7TQT2+76HPgNLOZoxV61yVY/C9qJ2sM44yqCy
ra/9FJP0T3Z+J/yuSDrzxpKlNsZWP1AwuxvUIg51/xu6zFCTXEzNSPkIXOZY
tTtqjvFl5kHFtphesExuP1nOP82Ir3PtTo34BNIxJSvpwWMMdTr/IlfwZ3Do
Xfn9yfQ7Y+DoW6HkE19Bo11w7KH+AKMhE3ZylA6At0pZNL9yH2PHX2Elowff
QJqzQiFGqptBPTZHRP07CNPdZgM929sZjc2tB1/dGoLH/13Nsy9/x9ihft+V
9fp3aHicQrl7rIFBzYkM0sv6AcayLnyvuV8ymliPXqJdGQbvIK+7TeueM0R9
NK8wkkegUSjetU3yCSOknbfgb/woHBEsq5MxLWe81Zys1I0eg2fUu1vkI4oY
5LzG+gjaOFTp9JkY191hhK7P//Ds7E8oLqOIfBTPYzQHRIwsh04A3fZLZvnX
TIb4B7vfWtRJeLqW+FWDNZkRpqu6Mdx/CvzyDysqdNAYLQWbRaq8/4OhgHhX
dr7jDB6O4Iw/qtMQKuHrHzjsCDVaAztzSqbhclCBgNXpUDjub/nvfsVfkBg5
QSutuAi8t54q9RX+glYJv6UtgrHwvEvmSbjsDPTEWm2rTkkA7w0ZIPzvDNzj
STCexhTYpsPaVCUxC1H5z3pVJVPhxcmTVpRbsyClEMiZ7pIGJ2739yyKzgGF
2H2IcL4CfB/N3K7mzgHGb7fRkE4HxqYnYxoi8yAY44jyL9PBh5Ckfrg6D+t2
0s7f3ZcB/NTU5VP8C+B4bJhkmpgBtXf+XuK/sgBvt8h/+/g6A3x6fTc/4l4E
t4wTT0J+MP0tvVdskhchKLOx+e4vpo/GO+Y2/4ajCsG8ERNMP6Si4Er8b8g3
Wn+N3sP075EV96xfgoGaB7KyVUz/U9KjjqgluGMt7K6RlAG+XH90qazLQMqZ
/OVjnwECBt4NPLRlyJoPXK8tmgF1od3/lK0ug02r5Imx/nTwK9T/aHX2DxBU
f/ukzHQQ/FLiMv37DywWfjsrZJEOL3l2jqaErkBi9ttBx79XQCh88Xdr0Cqs
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
qiD+BwG8568=
        "]]},
      Annotation[#, "Charting`Private`Tag$32459781#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAABSc+81YL0D8AAAAAAAAUwC+42Cwb
rNE/0ZqoZb96EMDbho1OmaLTP0LowBq99QrAhlVCcBeZ1T+5V/QhmI8GwDIk
95GVj9c/QlfDDIg6A8De8quzE4bZP/aMm0AxoQDAicFg1ZF82z+4nTUFlhj9
vzSQFfcPc90/FCguMOSt+b/gXsoYjmnfPwybMszOz/a/xpY/HQaw4D8uETZM
Alv0vxz+GS5Fq+E/p92z0kw28r9yZfQ+hKbiP47eoq9nT/C/x8zOT8Oh4z/e
uA7UujHtvxw0qWACneQ/WpFhQkQR6r9ym4NxQZjlP1UCG9s8Lue/Hmo4k7+O
5z8JOztKufThv3TREqT+ieg/6EG8L5wc37/KOO20PYXpP/FUZpWZiNq/dgei
1rt76z8YB/R7B+rRv82kCxq4aO8/T4ieM6XPob8RBnOV+zHwP37rCK88SJc/
vDngHZuv8D98vUIX8Dy0PxKhui7aqvE/4I4DuT8gyD++b29QWKHzPzmomSLK
Ydk/FQ3Zk1SO9z+f4BRh4PPoP8BARhz0C/g/8Ktx+UFn6j9qdLOkk4n4P5A8
ayp61us/wNuNtdKE+T+pZyoU46juP2yqQtdQe/s/8f5Eqy0Q8j/DR6waTWj/
P2BXkG7WNfc/2KUauX3w/z8bZsJ3tuD3P/aBxCtXPABAJqn7st2J+D8K4DLK
h8QAQCIPO9Ui1/k/MpwPB+nUAUD0mi2nYF78P4IUyYCr9QNAe7gbU96SAECM
QwDQwzkEQBbuNaU73ABAlnI3H9x9BEArnGlo8iQBQKrQpb0MBgVAldZu5Xa0
AUDSjIL6bRYGQAzOAtoizAJAIwU8dDA3CEDpoWt7EuAEQC40c8NIewhATNLm
sCggBUA4Y6oSYb8IQAhD+7u8XwVATMEYsZFHCUAUwyvWZd0FQHR99e3yVwpA
aeAfm+7SBkDE9a5ntXgMQNBrC45RqAhAMvOQLR1dEEAQpdKMiAYMQN/SV7rn
fBBA6Hm0GwY2DECMsh5HspwQQMHe77I5ZQxA5nGsYEfcEEDzv/JTxsIMQJvw
x5NxWxFA3YDaE4x6DUAE7v75xVkSQFO8wq103Q5A1+hsxm5WFEBeZ2Jov7oQ
QITIM1M5dhRAMrvX7JHOEEAyqPrfA5YUQJ1hWyBK4hBAjGeI+ZjVFECKQdib
bAkRQEDmoyzDVBVAAl5i5IBWEUCq49qSF1MWQA7tuuIb7BFAfN5IX8BPGED2
zogEnAYTQM2xrEbrbhhANAoZaD8XE0AehRAuFo4YQBNc8vfPJxNAvyvY/GvM
GEBfr08+uUgTQAJ5Z5oXSRlAP2EIt7CJE0DbKpBpCDIaQAAAAAAAABRAcnvV
gg==
        "]]},
      Annotation[#, "Charting`Private`Tag$32459828#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99.99999795918572}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.937370797814784*^9},
 CellLabel->
  "Out[523]=",ExpressionUUID->"ca1c5d4f-8bcc-4b8b-8c7d-a653b8e71dfd"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
9+g=
        "]]},
      Annotation[#, "Charting`Private`Tag$32459879#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAiBr1/g0v9r8AAAAAAAAUwLJ4j3ZP
Lva/+0V34xr+E8Cxu2I4RQD1v8SxjB1IURHAqLrHzbzt9L8aZgFXoioRwKC5
LGM02/S/IXA1rFoEEcCQt/aNI7b0v/fblQ/iuBDAbrOK4wFs9L9zrHnmMiYQ
wCyrso6+1/O/xD+P6DciDsAkqhckNsXzv7ahaPPe3w3AHKl8ua2y878cq7j3
Jp4NwAunRuScjfO/lFO2kpMcDcDqoto5e0Pzv24XHk+zIAzAqJoC5Tev8r/L
m9wMuUQKwKCZZ3qvnPK/fQdRpbcLCsCYmMwPJ4ryv+MudTg/0wnAh5aWOhZl
8r9APRu442MJwGaSKpD0GvK/lHoNnluLCMAjilI7sYbxv4ok8zjc8QbAnnmi
kSpe8L+H2p23VhQEwIFpV1nhTPC/YhY8RsrsA8BkWQwhmDvwv3b1/ZySxQPA
Kjl2sAUZ8L9/1+8kHngDwGzxk57Bp++/0+EljQjhAsCb7+IZLpPuv1t8mLxv
wQHAYM9MqZtw7r9KaIeMyp4BwCavtjgJTu6/qBCI72x8AcCybopX5Ajuv+Fd
MlqFOAHAyu0xlZp+7b+dl/SI77MAwPrrgBAHauy/cHft8whu/7/Ay+qfdEfs
v/BgIHL+MP+/hqtUL+Ik7L8g4tDPa/T+vxJrKE693+u/iHHCvah8/r8p6s+L
c1Xrv7It4guGkv2/WOgeB+BA6r8uKWOYrNL7v7fkvP24F+i/GjrcOyOc+L9+
wZUbO/Lnv4YXXAaSZ/i/Rp5uOb3M57+O3mOGYDP4v9RXIHXBgee/auFyWBfM
97/yyoPsyevmv8q0MsrHAfe/LLFK29q/5b9adrDkGX31v6J92Lj8Z+O/515y
+Uir8r8YLejngHDdv7I+sdoXWeu/VKrZ7IEq3b/+wg3NVxPrv5Any/GC5Ny/
9T9yvs7N6r8HIq77hFjcvwMCoPRcQ+q/9hZ0D4lA27/FJEyp2jDpv9MAADeR
ENm/njIvHWQU57+O1BeGobDUv8o8ZhyB9uK/BviOSIThx7+Y7HtbserVv1O1
OV4N27Q/avfi5yfEwz/31eWbAdTXPw8KUdkr8ec/rCkmyAaZ5D/4gp9csv/1
PwEomibpAu4/OneYlMgVAUBb2IoumWbzPzYkU96QTwdAxurVd6+19z9AlWAj
adQNQARdQfMzYvw/OhL3A6CgEkDKroDj7g3+PwAAAAAAABRAoXTujA==
        "]]},
      Annotation[#, "Charting`Private`Tag$32459931#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-9.210340090026987, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{715.9375, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-9.210340090026987, 4.605169904038897}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->FrontEndValueCache[{Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
     Automatic}, {{{-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.819778284410283`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.41431317630212, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.126631103850338`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.903487552536127, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.721165995742174, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.567015315914915, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.433483923290392, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.315700887634009, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.517193191416238, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.111728083308073, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.824046010856292, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{3.937370797819647*^9},
 CellLabel->
  "Out[524]=",ExpressionUUID->"165751b6-c62a-454d-81ee-468d28109f0f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check of F01: ", "Section",
 CellChangeTimes->{{3.919317500122892*^9, 3.919317508731094*^9}, 
   3.919317541976685*^9, {3.920541817287435*^9, 
   3.9205418173881807`*^9}},ExpressionUUID->"b23a5cf0-5446-4607-a58f-\
aefc69c1fa62"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "u", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[ImaginaryI]", " ", "t"}]], "t"], 
      RowBox[{"Log", "[", "t", "]"}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], 
   RowBox[{"\[DifferentialD]", "u"}]}]}]], "Input",
 CellChangeTimes->{
  3.920541820819758*^9},ExpressionUUID->"9e4516e5-085f-4196-a720-\
26bbc7f754a5"],

Cell[TextData[{
 "Integrating by parts it is possible to found: \n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "u", "\[Infinity]"], 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[ImaginaryI]", " ", "t"}]], "t"], 
        RowBox[{"Log", "[", "t", "]"}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "u"}]}]}], "=", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "u"}]], "u"], 
      RowBox[{"\[DifferentialD]", "u"}], "*", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[ImaginaryI]", " ", "v"}]], "v"], 
        RowBox[{"Log", "[", "v", "]"}], 
        RowBox[{"\[DifferentialD]", "v"}]}]}]}]}], "-", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[ImaginaryI]", " ", "u"}]], "u"], 
      RowBox[{"Log", "[", "u", "]"}], 
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "u", "\[Infinity]"], 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "t"}]], "t"], 
         RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]],ExpressionUUID->
  "95a198c1-ffbe-4ab7-ad3b-8a250f0cbb0e"]
}], "Text",
 CellChangeTimes->{{3.920607220914382*^9, 3.9206072302690372`*^9}, {
   3.920607599817391*^9, 3.920607604044347*^9}, 
   3.9206078967397947`*^9},ExpressionUUID->"0a78d8d3-ad25-46c3-bdc8-\
2477ef8985ce"],

Cell["\<\
This equation corresponds to the equation (same equation of B3 in 2205.12608)
F01  = \\bar{F}0 F1 - \\bar{F}10
then: \
\>", "Text",
 CellChangeTimes->{{3.9206077719677467`*^9, 3.9206078854673862`*^9}, {
  3.920607931600746*^9, 
  3.920607950091296*^9}},ExpressionUUID->"55afc319-4a60-49c1-81ef-\
6f05768abb3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"barF0lim", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", "2"}], "-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", "\[Alpha]", "-", 
     RowBox[{"Log", "[", "x", "]"}]}]}], ";"}], " "}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"F1lim", " ", "=", " ", 
    RowBox[{"2", "-", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], "24"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
     RowBox[{"2", " ", "\[Alpha]"}], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
     FractionBox[
      SuperscriptBox["\[Alpha]", "2"], "2"], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barF10lim", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", "\[Pi]", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", 
    RowBox[{"\[Pi]", " ", "x"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]"}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "-", 
    RowBox[{"\[Pi]", " ", "x", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "+", 
    SuperscriptBox[
     RowBox[{"Log", "[", "x", "]"}], "2"], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", "\[Alpha]", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "3"], "3"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.920604405623199*^9, 3.9206044174850283`*^9}, 
   3.920604944042845*^9, {3.920604976536337*^9, 3.920605054080249*^9}, {
   3.920607967326783*^9, 
   3.920607967705661*^9}},ExpressionUUID->"a6974696-1972-4144-8e98-\
643322184649"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"barF0timesF1", " ", "=", " ", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", "\[Alpha]", "-", 
       RowBox[{"Log", "[", "x", "]"}]}], ")"}], 
     RowBox[{"(", " ", 
      RowBox[{"2", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "2"], "24"], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
       RowBox[{"2", " ", "\[Alpha]"}], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "2"], "+", 
       FractionBox[
        SuperscriptBox["\[Alpha]", "2"], "2"], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}], ")"}]}], "]"}], "//", 
   "Expand"}]}]], "Input",
 CellChangeTimes->{{3.920605103685492*^9, 3.920605140654315*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"a8dee2a0-f461-41ba-84e4-4170a55fc98e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "12"], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Pi]", "3"]}], "48"], "+", 
  RowBox[{"3", " ", "\[Pi]", " ", "x"}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", "x"}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"6", " ", "\[Alpha]"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", "\[Alpha]"}], "24"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "-", 
  RowBox[{"\[Pi]", " ", "x", " ", "\[Alpha]"}], "-", 
  RowBox[{"3", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "x", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  FractionBox[
   SuperscriptBox["\[Alpha]", "3"], "2"], "-", 
  RowBox[{"2", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"\[Pi]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"2", " ", "\[Alpha]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]",
    " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  SuperscriptBox[
   RowBox[{"Log", "[", "x", "]"}], "2"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "x", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[Alpha]", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "3"], "2"]}]], "Output",
 CellChangeTimes->{{3.92060513666921*^9, 3.9206051411668777`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"e436fc3b-4048-44e7-9771-e6067a4ee737"]
}, Open  ]],

Cell["Then we obtain F01 as", "Text",
 CellChangeTimes->{{3.920608038079411*^9, 
  3.9206080462984743`*^9}},ExpressionUUID->"be1b69b3-9e2b-43ad-ba8f-\
e2413df814d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
      FractionBox[
       RowBox[{"5", " ", 
        SuperscriptBox["\[Pi]", "2"]}], "12"], "+", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[Pi]", "3"]}], "48"], "+", 
      RowBox[{"3", " ", "\[Pi]", " ", "x"}], "-", 
      RowBox[{
       FractionBox["1", "12"], " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[Pi]", "2"], " ", "x"}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"6", " ", "\[Alpha]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "\[Alpha]"}], "24"], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "-", 
      RowBox[{"\[Pi]", " ", "x", " ", "\[Alpha]"}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "x", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      FractionBox[
       SuperscriptBox["\[Alpha]", "3"], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "24"], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{"\[Pi]", " ", "x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{"2", " ", "\[Alpha]", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
       "\[Alpha]", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "x", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Alpha]", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], "2"]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", "\[Pi]", "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", 
      RowBox[{"\[Pi]", " ", "x"}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Alpha]"}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{"\[Pi]", " ", "x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Alpha]", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], "3"]}], ")"}]}], "]"}], "//", 
  "Expand"}]], "Input",
 CellChangeTimes->{{3.92060514994693*^9, 3.920605167799868*^9}, {
  3.92060522606107*^9, 3.9206052315564404`*^9}, {3.920605275276148*^9, 
  3.920605281564584*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"12ad425b-5c17-4fe5-a670-7e153d5e9822"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", "\[Pi]"}], "-", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "12"], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Pi]", "3"]}], "48"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", 
  RowBox[{"2", " ", "\[Pi]", " ", "x"}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", "x"}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"6", "+", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "\[Alpha]"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", "\[Alpha]"}], "24"], "-", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "x", " ", "\[Alpha]"}], "-", 
  RowBox[{"\[Pi]", " ", "x", " ", "\[Alpha]"}], "-", 
  RowBox[{"3", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "x", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  FractionBox[
   SuperscriptBox["\[Alpha]", "3"], "2"], "-", 
  RowBox[{"2", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"2", " ", "\[Alpha]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]",
    " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "x", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "3"], "6"]}]], "Output",
 CellChangeTimes->{
  3.920605168468272*^9, {3.920605277138267*^9, 3.920605282050724*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"fbfb06db-a395-4412-870a-b1b099f67e27"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check of F000:", "Section",
 CellChangeTimes->{{3.9188786939824457`*^9, 3.918878710430184*^9}, {
   3.919073291591381*^9, 3.919073303169836*^9}, {3.919229679793322*^9, 
   3.91922968541656*^9}, {3.919238458253577*^9, 3.91923845879319*^9}, {
   3.919325945114623*^9, 3.919325947148226*^9}, 3.91941667575675*^9, {
   3.920617394588273*^9, 3.920617396486808*^9}, 3.920636910519752*^9, {
   3.920639213787737*^9, 
   3.920639215000308*^9}},ExpressionUUID->"d64d27af-e71f-4c9a-92d6-\
fc76325ab39d"],

Cell[TextData[{
 "F000 = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", "\[ImaginaryI]", " ", "u"}]], "u"], 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "u", "\[Infinity]"], 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "t"}]], "t"], 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "t", "\[Infinity]"], 
          RowBox[{
           FractionBox[
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[ImaginaryI]", " ", "s"}]], "s"], 
           RowBox[{"\[DifferentialD]", "s"}]}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "u"}]}]}], ")"}]],ExpressionUUID->
  "72aa8c57-668c-4ef4-8865-0ac83f0d3f69"],
 "."
}], "Text",
 CellChangeTimes->{{3.919326334723495*^9, 
  3.9193263371520357`*^9}},ExpressionUUID->"779d342b-533f-41d6-a21f-\
7dd7cd99c54c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"F00", "=", " ", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["\[Pi]", "2"]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
          RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], "+", 
       
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"HypergeometricPFQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], 
       "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"Log", "[", "x", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"CosIntegral", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}], "+", 
          RowBox[{"Log", "[", "x", "]"}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           RowBox[{"SinIntegral", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["Hypergeometric1F1", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}]}], 
      ")"}]}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"F00lim", " ", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     SuperscriptBox["B", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "4"], "+", 
    RowBox[{"4", " ", "\[ImaginaryI]", " ", "u"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "B", " ", "u"}], "+", 
    RowBox[{"B", " ", 
     RowBox[{"Log", "[", "u", "]"}]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "u", " ", 
     RowBox[{"Log", "[", "u", "]"}]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", "u", "]"}], "2"], "2"]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.920637390212653*^9, 3.9206374051225567`*^9}, {
  3.9373140727078342`*^9, 
  3.9373140730225782`*^9}},ExpressionUUID->"0cc8f90c-5187-4540-ab0b-\
b47b2acb4bfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[ImaginaryI]", " ", "u"}]], "u"], 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["\[Pi]", "2"]}], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], "2"]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", 
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
               RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}], "]"}]}], 
            "+", 
            RowBox[{"32", " ", "\[ImaginaryI]", " ", "u", " ", 
             RowBox[{"HypergeometricPFQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]}], 
              "]"}]}], "+", 
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], " ", 
             RowBox[{"Log", "[", "u", "]"}]}], "-", 
            RowBox[{"4", " ", 
             RowBox[{"Log", "[", "u", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"CosIntegral", "[", 
                 RowBox[{"2", " ", "u"}], "]"}]}], "+", 
               RowBox[{"Log", "[", "u", "]"}], "+", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                RowBox[{"SinIntegral", "[", 
                 RowBox[{"2", " ", "u"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"4", " ", 
             RowBox[{
              SuperscriptBox["Hypergeometric1F1", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"2", ",", "0", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"0", ",", "1", ",", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]}], 
              "]"}]}]}], ")"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", " ", "x", ",", "1"}], "}"}]}], "]"}], "/.", 
     RowBox[{"EulerGamma", "\[Rule]", 
      RowBox[{"2", "-", "\[Alpha]", "-", 
       RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"x", ">", "0"}]}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"u", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{
  3.9193246661936493`*^9, {3.919324726667395*^9, 3.919324727072858*^9}, 
   3.919324767303977*^9, {3.920617568988475*^9, 3.920617594224701*^9}, {
   3.920618084356761*^9, 3.9206180854532633`*^9}, {3.9206185989318533`*^9, 
   3.920618611934855*^9}, {3.920619293795823*^9, 3.920619300626183*^9}, {
   3.920619375433261*^9, 3.9206193802185287`*^9}, {3.9206370131516314`*^9, 
   3.9206370731013308`*^9}, {3.9206371486346483`*^9, 
   3.9206371502320223`*^9}, {3.9206374174569607`*^9, 3.920637421848659*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"7b4f0fdc-91be-49dd-986b-355370fadfd8"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "x", "1"], 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", " ", "u"}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "u"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["\[Pi]", "2"]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
          RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}], "]"}]}], "+", 
       
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "u", " ", 
        RowBox[{"HypergeometricPFQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]}], "]"}]}], 
       "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"Log", "[", "u", "]"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"Log", "[", "u", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"CosIntegral", "[", 
            RowBox[{"2", " ", "u"}], "]"}]}], "+", 
          RowBox[{"Log", "[", "u", "]"}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           RowBox[{"SinIntegral", "[", 
            RowBox[{"2", " ", "u"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["Hypergeometric1F1", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "u"}]}], "]"}]}]}], 
      ")"}]}]}], 
   RowBox[{"\[DifferentialD]", "u"}]}]}]], "Output",
 CellChangeTimes->{3.920619314406205*^9, 3.920619399605371*^9, 
  3.920637092237564*^9, 3.920637152430419*^9, 3.9206374521504917`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"69aebd96-845d-4206-9d50-6238e9941211"]
}, Open  ]],

Cell["\<\
Mathematica is not able to perform the integration, neither if we set the \
upper bound of the integral as 1 instead of +\[Infinity]. Then, we choose to \
keep the limit form of F00:\
\>", "Text",
 CellChangeTimes->{{3.9206370999778976`*^9, 
  3.920637198174018*^9}},ExpressionUUID->"efcb5493-4fad-4d75-8bc6-\
3ade4d9dc9bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[ImaginaryI]", " ", "u"}]], "u"], 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox["B", "2"], "2"], "+", 
          FractionBox[
           SuperscriptBox["\[Pi]", "2"], "4"], "+", 
          RowBox[{"B", " ", 
           RowBox[{"Log", "[", "u", "]"}]}], "+", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"Log", "[", "u", "]"}], "2"], "2"]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", " ", "x", ",", 
         RowBox[{"+", "\[Infinity]"}]}], "}"}]}], "]"}], "/.", 
     RowBox[{"EulerGamma", "\[Rule]", 
      RowBox[{"2", "-", "\[Alpha]", "-", 
       RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"x", ">", "0"}]}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"u", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.92063724074894*^9, 3.920637295229726*^9}, {
  3.920637595600864*^9, 3.92063761545678*^9}, {3.920637938473309*^9, 
  3.920637959488039*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9100a942-c72a-4519-ab69-84848b4aff26"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"B", " ", 
    SuperscriptBox["EulerGamma", "2"]}], "2"], "-", 
  FractionBox[
   SuperscriptBox["EulerGamma", "3"], "6"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["B", "2"], " ", "\[Pi]"}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "B", " ", "EulerGamma", 
   " ", "\[Pi]"}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["EulerGamma", "2"], " ", "\[Pi]"}], "-", 
  FractionBox[
   RowBox[{"B", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "24"], "+", 
  FractionBox[
   RowBox[{"EulerGamma", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "24"], "+", 
  FractionBox[
   RowBox[{"7", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[Pi]", "3"]}], "48"], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["B", "2"], " ", 
   RowBox[{"CosIntegral", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"CosIntegral", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "B", " ", "x", " ", 
   RowBox[{"HypergeometricPFQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"HypergeometricPFQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["EulerGamma", "2"], " ", 
   RowBox[{"Log", "[", "2", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "B", " ", "\[Pi]", " ", 
   RowBox[{"Log", "[", "2", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "EulerGamma", " ", 
   "\[Pi]", " ", 
   RowBox[{"Log", "[", "2", "]"}]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "2", "]"}], "3"], "6"], "+", 
  RowBox[{
   FractionBox["1", "48"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"Log", "[", "4", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", "B", " ", 
   RowBox[{"Log", "[", "2", "]"}], " ", 
   RowBox[{"Log", "[", "8", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "6"], " ", "EulerGamma", " ", 
   RowBox[{"Log", "[", "2", "]"}], " ", 
   RowBox[{"Log", "[", "8", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   RowBox[{"Log", "[", "2", "]"}], " ", 
   RowBox[{"Log", "[", "8", "]"}]}], "-", 
  RowBox[{"B", " ", 
   RowBox[{"CosIntegral", "[", 
    RowBox[{"2", " ", "x"}], "]"}], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"HypergeometricPFQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "B", " ", 
   RowBox[{"Log", "[", "16", "]"}], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "B", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "EulerGamma", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"CosIntegral", "[", 
    RowBox[{"2", " ", "x"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"Log", "[", "64", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "3"], "3"], "+", 
  RowBox[{"B", " ", "EulerGamma", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["B", "2"], " ", 
   RowBox[{"SinIntegral", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"SinIntegral", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "B", " ", 
   RowBox[{"Log", "[", "x", "]"}], " ", 
   RowBox[{"SinIntegral", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"], " ", 
   RowBox[{"SinIntegral", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"Zeta", "[", "3", "]"}], "3"]}]], "Output",
 CellChangeTimes->{3.9206372559512577`*^9, 3.920637299939403*^9, 
  3.9206374426580677`*^9, 3.920638403322072*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f6659fe5-254f-4a36-946e-171049c4371b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"B", " ", 
           SuperscriptBox["EulerGamma", "2"]}], "2"], "-", 
         FractionBox[
          SuperscriptBox["EulerGamma", "3"], "6"], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["B", "2"], " ", "\[Pi]"}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "B", " ", 
          "EulerGamma", " ", "\[Pi]"}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["EulerGamma", "2"], " ", "\[Pi]"}], "-", 
         FractionBox[
          RowBox[{"B", " ", 
           SuperscriptBox["\[Pi]", "2"]}], "24"], "+", 
         FractionBox[
          RowBox[{"EulerGamma", " ", 
           SuperscriptBox["\[Pi]", "2"]}], "24"], "+", 
         FractionBox[
          RowBox[{"7", " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[Pi]", "3"]}], "48"], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["B", "2"], " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "B", " ", "x", " ", 
          RowBox[{"HypergeometricPFQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
          RowBox[{"HypergeometricPFQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["EulerGamma", "2"], " ", 
          RowBox[{"Log", "[", "2", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "B", " ", "\[Pi]",
           " ", 
          RowBox[{"Log", "[", "2", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "EulerGamma", " ",
           "\[Pi]", " ", 
          RowBox[{"Log", "[", "2", "]"}]}], "-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"Log", "[", "2", "]"}], "3"], "6"], "+", 
         RowBox[{
          FractionBox["1", "48"], " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          RowBox[{"Log", "[", "4", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "6"], " ", "B", " ", 
          RowBox[{"Log", "[", "2", "]"}], " ", 
          RowBox[{"Log", "[", "8", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "6"], " ", "EulerGamma", " ", 
          RowBox[{"Log", "[", "2", "]"}], " ", 
          RowBox[{"Log", "[", "8", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "12"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
          RowBox[{"Log", "[", "2", "]"}], " ", 
          RowBox[{"Log", "[", "8", "]"}]}], "-", 
         RowBox[{"B", " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{"2", " ", "x"}], "]"}], " ", 
          RowBox[{"Log", "[", "x", "]"}]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
          RowBox[{"HypergeometricPFQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}], " ", 
          RowBox[{"Log", "[", "x", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", "B", " ", 
          RowBox[{"Log", "[", "16", "]"}], " ", 
          RowBox[{"Log", "[", "x", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "B", " ", 
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "EulerGamma", " ", 
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"CosIntegral", "[", 
           RowBox[{"2", " ", "x"}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
         RowBox[{
          FractionBox["1", "12"], " ", 
          RowBox[{"Log", "[", "64", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "3"], "3"], "+", 
         RowBox[{"B", " ", "EulerGamma", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["B", "2"], " ", 
          RowBox[{"SinIntegral", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          RowBox[{"SinIntegral", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "B", " ", 
          RowBox[{"Log", "[", "x", "]"}], " ", 
          RowBox[{"SinIntegral", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"], " ", 
          RowBox[{"SinIntegral", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], "-", 
         FractionBox[
          RowBox[{"Zeta", "[", "3", "]"}], "3"]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}], "  ", "/.", 
     RowBox[{"EulerGamma", "\[Rule]", 
      RowBox[{
       RowBox[{"+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]}], "+", "B", "-", 
       RowBox[{"Log", "[", "2", "]"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"x", ">", "0"}]}]}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.9206385004890547`*^9, 3.920638509431313*^9}, 
   3.9206387770197678`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"2d573361-6197-44c5-a7f0-fb377c564d46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["B", "3"], "6"]}], "-", 
  FractionBox[
   RowBox[{"B", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "4"], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["B", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "B", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "3"], "6"], "-", 
  FractionBox[
   RowBox[{"Zeta", "[", "3", "]"}], "3"]}]], "Output",
 CellChangeTimes->{3.920638513629342*^9, 3.920638778889534*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e4d889fb-995e-4bcd-988f-60e81d99c0b8"]
}, Open  ]],

Cell["\<\
We now plot F00 to understand if our approximation was worth or not.\
\>", "Text",
 CellChangeTimes->{{3.93727645901832*^9, 3.937276478204973*^9}, {
  3.9372768965745773`*^9, 
  3.9372769030744047`*^9}},ExpressionUUID->"361ba24b-7266-4c3d-ae4c-\
8141bdae093a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", " ", "=", 
   RowBox[{
    RowBox[{"-", "EulerGamma"}], "+", "2", "-", 
    RowBox[{"Log", "[", "2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", " ", "=", " ", 
   RowBox[{"EulerGamma", "+", 
    RowBox[{"Log", "[", "2", "]"}], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Int1", "[", "x_", "]"}], " ", ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", "\[ImaginaryI]", " ", "x"}]], "x"], 
     FractionBox["1", "8"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["\[Pi]", "2"]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
          RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], "+", 
       
       RowBox[{"32", " ", "\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"HypergeometricPFQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], 
       "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"Log", "[", "x", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"CosIntegral", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}], "+", 
          RowBox[{"Log", "[", "x", "]"}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           RowBox[{"SinIntegral", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["Hypergeometric1F1", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}]}], 
      ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Int2", "[", "x_", "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", "\[ImaginaryI]", " ", "x"}]], "x"], 
     RowBox[{"(", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["B", "2"], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Pi]", "2"], "4"], "+", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "x"}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "B", " ", "x"}], "+", 
        RowBox[{"B", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "+", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}], ")"}], ")"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Int3", "[", "x_", "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", "\[ImaginaryI]", " ", "x"}]], "x"], 
     RowBox[{"(", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["B", "2"], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Pi]", "2"], "4"], "+", 
        RowBox[{"B", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "+", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}], ")"}], ")"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Int1", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.0001", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Int2", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.0001", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", "  ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Int3", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.0001", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Magenta"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2", ",", "p3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9372765648825197`*^9, 3.9372767344486017`*^9}, {
   3.937276861503976*^9, 3.937276870389928*^9}, {3.937276951385013*^9, 
   3.9372771424741507`*^9}, {3.937277240602415*^9, 3.9372773870989*^9}, {
   3.937277456420059*^9, 3.937277509670621*^9}, {3.9372775614086018`*^9, 
   3.937277598572708*^9}, {3.937277679910449*^9, 3.937277710688941*^9}, {
   3.937277746039565*^9, 3.9372778526121473`*^9}, {3.93727788360334*^9, 
   3.937277962413068*^9}, {3.937278003891859*^9, 3.9372780049153357`*^9}, {
   3.937278064504231*^9, 3.937278083235386*^9}, {3.937278301354312*^9, 
   3.9372783102811527`*^9}, {3.937278413534527*^9, 3.937278448649931*^9}, {
   3.937278524177887*^9, 3.937278541500218*^9}, {3.937279138699143*^9, 
   3.937279167204961*^9}, {3.9372792436133327`*^9, 3.937279258092309*^9}, {
   3.937279675053316*^9, 3.93727967524524*^9}, {3.93727971265366*^9, 
   3.937279716244247*^9}, {3.937279905682682*^9, 3.937279926287858*^9}, {
   3.9372818414275312`*^9, 3.9372818481873713`*^9}, 3.937281909622547*^9, {
   3.937295419237914*^9, 3.937295431743161*^9}, {3.937295659872344*^9, 
   3.937295665419113*^9}, {3.93729570664249*^9, 3.937295717576581*^9}, {
   3.937315013631469*^9, 3.937315014314138*^9}, {3.937315194599792*^9, 
   3.937315201248695*^9}, {3.93731523225599*^9, 3.937315235571177*^9}, {
   3.937477576415023*^9, 
   3.9374775780105267`*^9}},ExpressionUUID->"dd668ded-6f46-40ae-86d5-\
5a74a9ffbcfc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
eQYGI+P1T3V4XBrkta9eHDx/ANnc/Zaa/U0aHhf8/c53PwS5ea0ZW/+VhtTV
dr+AuwfRfta/LFzMMiDXRgxgOBWKwtpoR8aEZGD+89O6ozZhKP4QU3m5ogww
dMvmO6+HoTRZrtAQfRl4HVY3SDgWjk68F9RQsZKBn9dyt+e+h6OCsxJba54y
MM4ezWmPItAVksLzp2EyoOWfFxkfG4FurKqfPZ4iA05E87jIExGo+rauq8Vp
GaAr1pVOPBaBGj3IouxXZaBmxvr+J+8I1MpssTBcKQMRzUcbpUQi0KtW+4el
T2TgwqLy69a2cDQY554S9EoGSq+0n3SzCkfj0v5GimMyEJn7HN/6LwzNjYYw
/1yQAcZyoxOp7GFoKTf63eM/MmBCiw2f2YSiDZR47eheWeC/fSM0Jv4gov2Z
HmLKLwtWrPcvlhwPQbzueRuDRFmo4Dce3xMQjCLVXOe+mcsC861z7Y2CQahj
775+ek9ZoPR/D/6EA1Dsk+q7xCOy8OHdeO37t36oR7DXrfiZLOhN1TaqVDgh
idXzRvX9sgBeKo4iBHuU3OOt2jsjC89MVhWvH7ZEMke+7aail4MeWhhvXNFF
GRNMjQEWcpCeVfVBaOc8HW0YrEj1lINK56iKB0+MsGpe8dnz4XLAJEXV/lHd
Eo8jxeDOs3IQzFI58O65IybwrdpPXZODbz6xi1UPXPCppf8M/tTIAbHr1+jc
YXdMLLfkVhiQAwnQzD9yyQfnJXHuMpqVgxrD6IHPh/zwnP37Ra81OUg1mQ1q
Oem/cz+8PnKIXh5apZYFW7P340LqsI6zvPKglaX3lSE8AH8ZU6+5LSsPQSvf
3o0QAzHUbVxt1ZGHmJ65Y8cWA/HF0205oxby0CsdWZqcHYS/B5yKW/GUB8cx
Wz03+mBsrO/gyxghD/SvvL73hAXjYi4BS8k0eShmS/1wtyEYryxOaxnk7eTP
vXJtYi4Ymz+/K+5SJg8XaBcZkraCcVlJDEtUrTzY7OLuvfErGK8f0tnIaZMH
1upfvypHgrG1za65sgF5sLj7z335WjC+If3y7eNZedCNWOj5Yx2MN7fzm/vX
5GFaQszNfyYIOwy73f1KrwBhR1f0J/2C8J0Houdp+RSgamtijtIZiP/lfD4q
LKcA7y6cajvMG4hd/GrCtXQV4FVw51aSQwCuIia62VoqQOi2j4Jv0n7ssbBb
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
H84Thro+MhdVWbBi+KwHU3eeG3hoQ5C2BgtCUPGfYSc+PCXRchJpsUCDmqjX
wFyGBdaWPY7TY0HnSO0mCwcxnNJn0HXTgAVWqYyd+osSWD7s8uRTIxb8p+yY
rpEnjfVLoo2EzVkQOO/niurkcDFxCplYsmDvwydPXXvksd2gnw/FmgXSfoUn
DvQr4JrjPYf32rDgp4Ouf36zIl6nRDuXYseCEUWlhqEsJfziXt3tEnsWvJ3Y
cobopYxZVPvGVw4scP2+zE1wXhn3jtwa+L6aBcdvtHeHxqngXTEac9LOLLhv
abpKZEIFj6udU7BZwwKl9+nCDKSKD5cLWDMRC5oy2Xz/Dqviv/QwSshaFmyJ
OY9GzqrixC9fdqavZ0Gl6GTAj1RVLJm4NaqcyAKzbq+7yw+o4gztN5ffkVlA
Qyr33q7k9UPVrg9+u7HAyyzU3uyjCs5nV71S8WBBQKvZy6xDKthywuLzajoL
Pn4jO1V/VsblyTn8PgwWvAiV6zZ2VcYuBgqaESxevV+baot5ed1Ye9Ihi8OC
chfoM3qoiD285hm1G1nw5+2Rb+nPFXDn1P59A168+p46uIs3yeMRkw03dLey
INLDvfvDCVk8EaaRq7WNBTs+R6fc4ErjuWcfc9V3sMCNEHvQjCOJpXcH5yn6
seCsjvGjRRsRvPpGUqHofhZs0z7VoDc7y133g3ZL6AALooR9P7uoTXFpBMUi
gUMskDqpISngNcbd2X/j9t/DLOCub54zPHmGe0a15s5kJAuI1swbHzfPEjL3
xJZ+j2aB3fH0WRnZRcLNCtLdr7G89aEneaksflTFeXtvJJEFAk3ZqiJ3hVFD
3pWyjydZ4Iu+f3nqKIZap7bdH0hmQcPW+Q1xJRJoKG38QXcqC+TfbNnXriGL
xv978PDdWRaIeeSffG0sh2atj5V3pLHA1OSp9X5deSQQjR69vsCCcLXPQTUi
CkiyVajiVQYLOHGtT3v7FJCy5quKlkssiM8L5hfKUkR6+y5UNmXy+N9EWkwg
KyHLGq+qp1dZ0Hj15LrKD0rIQUynui6L5/f1GQUKvsoIvD5V12az4LqHa6NB
szJyv1VSU3OD50eFXQeTNVTQxt+HHlfeZIFFvLHg3CYVtJ24+kl5PguSjNfe
WB+lgvZlLD25X8iCD293sGmnVVDYcGPt3SKefy0ELeTjVVCs3WluSTELbEqS
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
        "]]},
      Annotation[#, "Charting`Private`Tag$32341080#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
hBXIL5dcT0oVoDCOjnHPFJG/jlpXgm870u0vXVL/zwpimH1XZjcJEXeSMv5s
Hgkutde9b+gXIj/pN7zkBSQ4cnl3AD2wA6loeuZfWUiC92se35MU6USVm2Zi
T8uQYIHKh+yz3p3IjRLj9Z8cCbaZrXi0pbkTyThp2NMUSSBeFhfwa1EXKvDJ
N9y2jAQ3jh3Y67+9Czlc3im7Wo0EH0NHum4yu9DsPcF3OU3iO7NMdwerC6Xn
u3D+aZEgPNRwyZkdXYhaN/FkUIcEKrYDQ45LutDY60tRQn0SxOxUDlJt60QJ
I8qeletJcIEf0j3t34nM5mfZPNlIgodN/X9Zkp2of+k2/cQtJHA74n75VkQH
ijRolgrfToKwuj3WFqNCZLjT8asXIkF6amDB2C4hEu4ebnLcRaz1G9jUS+0o
wOPCY2trEohGFOhIFwmQZrDslY02JGB+WP16Hp+PPLOMyNIsEiTOttzQK2hD
8uVVOr/3kGCNb4TIzigOKuUzJT7uJwFZpJzmRW1BC/761Zc5k+D2VOTsxPl6
dI/2wtLDh8iHI95q8r0ExR+ffpLtTwJnKRm73aPPUMyV7UrfAkiQIJqr7V2e
iULqyj8dv0iCeenpZ8qa92K3HdURJ+JJ4Pe6zfjntVJ8yHH+aG4iCQ7VyJ7m
O1Vgh3OWe0eSSPB6qeSJEfFqbPO8XsfrEQmcpH9CrG8DtmyXiHv6mATeE47u
8aLN2HycPDWaS4ITBxf/u+rbio3WtTR6F5NAqTwtc9dZwu9sZDY8KyOBsYfL
+7rzfLzqGO3OeAXxnpIRxeK4AKtdjhExriFBUPsM7alVO1Z61HbMp4EEyytP
uqtKCbFsjZygoIUEPzMS9PJKhHjhB4bpzzYStItpmDymdWCRuRsPNgpJEFhc
I3qspQNPqwml/LpJUGdvecvVqBP/NFXyLeolwar5kks2BnbiYYc9byb6SKBp
81YvLK8Tf/a/vWvzJxIcHiOd12zoxO/ju3NOD5Fgfqp2/lRdJ+4uWK5Y/J0E
howjyfI5nVjA2x84OU6CmoUNBjf9O3HLyL0Bk0kSiEW3GrzS7cS1Mm9tz0yT
4PiY+Ny3qg5crqf+vGSWBHKupmuSLTpwMfnQiilRa/BbKyhyzSH6Xbf7l7ZK
WEPfnz1Jk//a8ePwD9/PSlvDckrxO5Wt7fjBg1V7Xiy2hq/ONg+KDwpwUqVL
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
iU2hAlkaqCTCNZWfPLzVuiF7vgINzJutkpvD+bglYr9w01Ia8C5ulFWfL8BO
9d9nXFVp4Or8Zyz6hACPi4Xq3NagQYhTuu3jGgEOt1JkNGrRYChbMV5JrB0r
X8oM+KNDg9cxfxfEbmjHj2tN0/UMaEDtLv8+SG7HZgu4HEcjGozq/ny9yKYd
c3f99ztqEw066HsezW1px/9dnNCs2EqDwyJLT3ctbscT1Zepo2Y02ES9c7tO
IMCXRVX9NHcS351bqEtCBVjFIi+ZYUWDdM09x5apCvCT0J0NYRQalCkunLMj
5nNUJRwrpNFAiTVZa67Ix4J5R1U+MWiw9N7gpQg/Hj4Cf3cp76FBbUtIV8Gl
Nvw7OOaE9X4abFhjfeLfHAdfxStvn3WiQcD+2+VJ+1rxirmiysfONLAXHdjl
Ed+M883JX3vcaPD5N2f6QEEj7ig/uWOHFw0WXXyxwuB+LdZ89fKjSAgNXhWH
btaRLMHFpbuNrqXRQLjOjhd5Ox/Z/Rezxu8RDXaQd+m3qz5HnyUb1A4+psEZ
DedJtWsvkJLjVsn1z2gQJKe5c1ymCj2Zf2pu6XMa/Be+SzV5WQ2yfPL417wX
NNCzHg7OWlKH/GZU+gWVNNCx23nOr7YRyWSwul/W0mDa6u27woBmlG4XxU1v
pIGgPq+atbQVmf2urY1uJfL7VOrOTeSg9tSZMn8eDSwyblJKZ7jIg2zy7JCQ
Bg1Zl14cJupPdPxkJrmbBq3dSgcdi3no7p3M5A29BF6LrL13mhL9mUXfTZU+
gv/BEy23c/mo+euyq/MHaJAmS9nwc7EAOd9khAx/oQFtOLFg6rAATW+/6t/x
jQZSg3KiTvcF6PpAtWfFKA0U4tmlQxwB0o3+65z5kwYbu6sv+w4JUOXmTfvi
ftOAHN53aOCHADm887Q/95cGcHJXiMlXYp6LeGTlPEeDYrHRgNNtAhS5/t12
m/l2xDyqtaaC8EfNbmXjTRJ2EHwi94L5EQEqDbHXXSFtBz3wznezogDR10aq
iy+2g74p+4IfBXw0yK9UHJW3A5/pSmon8FFIwB+pbmU72H/YzoFewUPLtIxF
qlTswOK95/U+fR562uLx+7G6HWw6uzRBX7ENkfwefr+xyg4OpJb0qBRy0Du1
3o/n19iBp2f480+bW5HsSRqPZmgHdwbmVn4fbkQZyhH1JsZ2EHtermOPdgMy
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
4msLsrOTkHxTzYLAjXmWmt+akdmpNtZULcHfqnWR/ZwmpBd/O0WpgQUdSgq+
v282omUlh4aMm1hwNmvptmrzBiTRo7OJ3sKCGN1fDrVtdWhAo7TpahsLLl2U
rhXJqUYCixDFLD6Bh3t2YsNUJapyJR+qayfqrXzyRY57BUrJ6Z6Y62LBYvLK
qfSfxchhyx+N032EP5nZJf+USEJNsoqMk/0s0DSd/pzmcwWZfjYMcx9gQcjK
rNL4f0ew2q0jA/sGCb80TvHRv3sfR3sGK7G+EvvpDXKma7Pw7K67JNthQj+x
9gpFqU9x34+2LPMxFuT8tQ+br1CCGc1fX2/5QehnY1Va/80yXJ0mJr1hggUk
7rYkl+lynE7ffkJrigXr75nvT9pcjZV096SoTbNgp022WFZJDY6Y825T+seC
VsXHvdQ1ddg9L2PDwnlsqCd10j7UNODuS1XOIqJsWK//ut9urBGTD/benJ7P
hlqNjQupC5rxi02/a3+KsWHpdOCxptlmrCcjPzkswYZcfenM3nct+N5HA53P
kmxQ8LhglvuwFcu8tHZ4L80GsyWidsG2HHzhhvOV7kVs4n8a6VjQzcEjxy6U
8RezIaDF9HWVNRcf2pn4rXkJG5qD0p9Y3eFi3rJCtVoFNiTSNGN+tHLxzjEO
rVyJDUpNK+3uEn5Z0DAYVLyUDb2qq2f1e7hYK3V+/tPlbHiTv2KmsJCL4/3V
P2SpssFW4cAXRy8uFrPbJv9gBRums2aPeSziYv/V7F33NNigeEdt2iKGg7/8
O+kXv5INI/m/vFx/tGIH4ZVH0VpscKdGR5wwbcVNOemdEavZQJq/AeTdW7Dp
RSwRosOGSacIo9XnmnHO/p6t59ay4Yuq8Mn1U01YzfjXMR99NnSJ7P7oyGjE
s316rUfWs8G0ePm+uJY67FVqNXNwAxtEz6SUnj5ai/tiDxvu3Ui833HowZPx
alxtnhBH2cKGIv4ll4pkjCOSRHYbIjb4DBasXVr1DP/2VYvQ2ckGWL36Wajh
E3zUZkuJ5i426G3/buZamY6p057LFazZsPD34LXnDRFY1qH77W87Npz9rmZn
5paFgtf/lB2ns2HAeXXfpcqnaExcFr4y2TC6osrn1IVCJHi+60HvHjbUOMme
mjhXhnZFO7V3OLDhQpv3zlBBOSo6cm5B2342bLW4Gt4QUYluKTx1q3Jig5vV
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
+5qAC+h/6SZl7A==
        "]]},
      Annotation[#, "Charting`Private`Tag$32456406#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{893.38671875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99.99999795918572}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.937277108021052*^9, 3.9372771120866117`*^9}, 
   3.9372771431604156`*^9, {3.937277254282881*^9, 3.9372773304196653`*^9}, {
   3.937277366425233*^9, 3.9372773882529907`*^9}, {3.937277467592394*^9, 
   3.9372775127498407`*^9}, {3.937277565262072*^9, 3.9372775991580353`*^9}, {
   3.937277689282321*^9, 3.937277711518827*^9}, {3.937277767199057*^9, 
   3.9372778541240788`*^9}, {3.9372779208156977`*^9, 3.937277964290476*^9}, 
   3.937278008287795*^9, {3.9372780727108192`*^9, 3.937278086275713*^9}, 
   3.937278129208213*^9, 3.93727831714069*^9, 3.937278461445362*^9, 
   3.937278551197806*^9, {3.937279657218061*^9, 3.9372796796916943`*^9}, 
   3.937279745295487*^9, 3.9372818255603027`*^9, 3.937281874971545*^9, 
   3.937281935181579*^9, 3.937295458849237*^9, 3.9372956837376823`*^9, 
   3.9372957794312353`*^9, 3.937315114474937*^9, 3.937315239486066*^9, 
   3.937315337749969*^9},
 CellLabel->
  "Out[510]=",ExpressionUUID->"786d64db-a8c5-4be3-b5b8-5a9db0b708e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p11", " ", "=", " ", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Int1", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20"}], ",", "20"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p22", " ", "=", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Int2", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20"}], ",", "20"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p33", " ", "=", "  ", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Int3", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Magenta"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20"}], ",", "20"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p11", ",", "p22", ",", "p33"}], "]"}]}], "Input",
 CellChangeTimes->{{3.937296442916175*^9, 3.9372964852143707`*^9}, {
  3.9373147684077063`*^9, 3.937314768919682*^9}, {3.9374775810937767`*^9, 
  3.93747758163321*^9}},ExpressionUUID->"a6be8775-798a-45fb-bd58-\
50458add9310"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
kuDYbowGEhK2o0F2iDhady+P74UdVy9XvvLvNqLo3O2/NxUcSbCfTN106gaB
7pXwhax2JmF+cuvzv2uWoo/XSY2DK7j7h5P1eykj7Nkr8oM3VpJw2eGf1dWG
EY50vl5R+yoS8NSTzuVuS7F1DjuE14OEooi44Sd7Cbw5c5WGricJuXkHi84k
iOAjaRsH/bxJ+EU9pWISIYYvnwgtOu7D7a8rkVnFzbfahJiQO+tJONTorDDo
L4x7j5zQ+OpHQslE5PXAQDrmP5gzSN9EwlLBiHWuizxYNfJGkaU/CUfsXrYk
233gOO+9GxIcyMWXZWNMbZ1k7wir18jaSoIW9cH8ueBl6GRw++CT7SS4db9N
3LuJRCVbeotGgklAW/uUEq6KoNZNYyFSO0kYY177p10min6t59V0DiNhjdPp
9SL+IojpTfzc9x9X74p38ve7CKTvvrz48h4uf72vrh6RFUSerro7X4ST0DO4
UiqYNc7e52ijORvB7b+u/9kl6x5OFrj9VI0i4fwMQfudz4vvWm0o9jpAgo/Q
NZ0RJTr+YLpz59GDJOw2z6dGl7HwtMEBzbJDJJi0ZnHsykSwlE7yz09HSFh7
zemrk68ItlLPLhY4RkLOU06h6yMSb1S6vtMogYR1opoPLZwo+LBctWZAEnfe
bkfbqqyZ41ySrPuZmkyC+N47JcIrbnOeiLwtfnCShM8rlba/N59lf2V+2/k9
lYTZmpFr25WEEB/1j6bwaRK0KwwLN0iQSFmAZwilc/06Ob7454IwcuRlloRl
kjAj/Gt51TthFDQnG5p7lgSO8tfjax6TKHlKW6shm4Rz0d7DPOpUVDRmNTSW
y9U/frZ5VeAiu3nEtWT5BRKYhQkvbp98yx764RvqdpGE1PaVDk38kxxa3w6t
A5dJKKhO3/qHKYh1u6OGrhWQcOuEnVqQEoHdPyeVvCkkYe/5HVHHG1h4z7uz
oYvXufNAK3DmVRDGGa8KtbSLSFDO6jHQ0SBxVUvV0PoS7vwMaYeHWVFwe0Nt
SWIZCRovt/06PjPPmXj6OrTyFgkMwcRKSu5LjtjjHq3uChLEVrTJC22fZJvf
Hx2i3iHBZVOr6GS/APKtWigxv0vCiQu2XqiMiWLK6WHb75PwwFpQ7Zk5C10o
ktHOqCHBzs4tklzNQo8LtYY5j0gI/Oznpi9KoK5LlqVDHBJU90i74XJBxHN+
RZjEU67/d1cWphyeZiucW6/t+IwEGlu/gFlYzbFLDx7eW8+tF3/VJdI5y9mW
Gll6sZGE4d6KZW/9l+HE44lhLc+55/d5ZjZAI/D1Y1na0y0k1Ko23rnTRuKm
Q1eHldtIuPrkctWsFYkHoytL17wi4Zpj5ob4NzR8vbRJG78h4UNTxzMBFT68
raerVPsdCTrC30RnnL9xFEQmtPM+kLDqwOM1Rmv+srucqWWCn7n+dwqp/qgn
gC4cVNDZ30lCXnaJ3o9RBvK9ZVb2rYu7X49ASaElicR6V+l4fCVB6gepLydG
oHaxbWWPe0lo/ftiQOvgMpTuGqOj9Z0EvUyqIStohr368JmynB9cfw31pbQl
1XJoldd1BIZIqH4yJ6W9e57zvP9R2b4REr49lWm5dl0IJ0m+1fk6SoLVCn4f
RCGww6rBstVjJPwxpjbs2kdg3rhFnUfjJHjYSKx/OUfFnDui5RpTJIyewWXm
pnw49oeWbvYMN68LFRbPm/dzLGTsyvnnSFBMidnT3PubPem+Xjd8gYQQV8Wo
bzn86E78f+XdPCw4tWTYMHCehvbeS9BdtYQFqrcOb00nCKQ7lFdes5QFFePy
LoJRdDQsV6GrvowFoW5n7xocXoqKPBvLz1JY8McjRCjR9y87KOmL7hI6C76v
szYbP9vFUa75W76HyQK7B1HCLxN58NcRIb0ukgU/Tz13sBWj4IsK8rdWirCg
+HOUv9pTBt641lTvgRgLWM8WWwtL6FjyhNstVUkW9FlnufjTBfH7R1v0sqRZ
kC6wuvG1+zQn63f0LV45FqwqXPjkeIzD9lQ+rbdbntt//ogTJfMfm7n+2q1O
RRa8vJ3/5NCAIGpNeajnqsKCug9xp28H0NFJ/PrWPTUWhFlexpJadOT8d0BP
RZMF6tGfXnzyFkT8agu3MrRZQPmwzee+wCy71k9En0ePBW+vrPLqFbrIPpKm
eXuXAQuE/JWrEhamOda1oN9hxAIX46Vtv8sE8OyEz20XUy4+k+SM96tp+J7G
Lv275ixodpguFHGm4YhN8beVrFjw3umW4eJ5AWyYnqufbsOCYA9MnR2Y5ozW
3bq9gFigGBT04XdgOrt0ul4/zI4FJcMe7jamM+yd2p23PzmwYLUWx6g+TACp
B4zpOzuz4Ozj/syMHCrqz1xWcWcFC/zcY+qARUUFjXIGim4sGPlQU7lyhh8F
/DOuOL2aBb3rU7u/qk+wZfVWGsx7sODG16A3cvwvOZ+3BFbs9GLBYLaiJTn8
j5NzLsrg41oWiEr/Tdg6JYDXNp+qcFzPAqt+Acp6gopZC1cNqvxYcDNJqEIw
SAi/MqipkN/E5XNLTqfQOj58avsrgzR/Fpy/rF5qdG2E45r7veJfIAvmA6Zi
H8r1sZe9mDMI2caCaiGX/wpW8qB6HuHK90FcP1lrrFQeE0THjDUMHUJY4LuV
IirqRUGwA1VWhLIAKDUpdcMC6H8jetWI
        "]]},
      Annotation[#, "Charting`Private`Tag$32104103#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
VGNBl78WYyIk9Cpw6qL4aiVWWfVNy5AmIpnfW0VONVZiyWgduzgBInoq6p+b
86ESx4SHmJwnElHUh/kFW49K3Lp/9mNvBwExq5ZXJVP+4lNlm//+SySgyNdr
hegWf3Di1ra7n4UJqNTewKD1fgmmUDctTowsQ8vGtuPNO0twQlUAQaVkGcZ6
r4c3Lv/CRKMXittTlkHofGFT7alfODNtLaPp8DI43dl9ucKoGL+Y368n+2MJ
pvIPf8YThRhyCVuqIxbBUHfIxTTlGzZZrzFzjzQPNZdzHjw1S8cHx8Yev/Zh
QXXSjoNhGi9xkGb99ZemLKj6VSjmuyEN11lzJ/4nyoK/6yqT9kynYNWL66r/
4El4dPzf0eldz/DvgusZJdyTwPnSXfW4QAQ2FYjc65TEhBeW1Pnay9GgVPdh
4MPRYTA43m6W5/wZVP86nv5R3AqLDF6txr4/wOl8ffIebsERl/kcc1UrQOro
wKbBxFYsocl/K+Z8BfiMlm7Wv9aGDVIE6u1WKsC4TyTdRbIDY+M7Owa5KoHX
+BKOaOnERLm7nSdl/oH5wxGL4IO9+NbgAyXn/dXA86i7KVd3BFeYCX6z8q2G
ixLG8V9SR7Bw8sMDhjHVYLWHPzV67ShOc4i+sqG1GvKNjpv+HB7Fxb8f/Wn2
qIGq80d/sJ6MY1pW7LnDN2qhJfnyS7XLEzjifGLe/rf1EGnQPR3/eQpX/3uL
VWvrgddCk3J4dAqLa3wvoi7Wg+mu28TOTdP45Xj3v6/mDeC8qTX1QNQ0/nFa
aUiprQEOqtb8i3GbwXNuH8VJPE1w44Jq1TfqHIbiIqlWzSZIdbB58HX7HA6R
q5fPPdwESzwrh/3PzGHBnnnNsy+agKs08pFI1RxWc4U9TfrNQLj++s9wzDw+
eaTsSrZnC0ic6cvrF1rEmfnN/92NaoF3f7ub+E0W8aTYaKjH5xbIkHs01eWz
iG808EVLklohvvTC6cDfi/ipnV3mnbhWeKpdmeN5dQlX7etoOVbSBtfS/MIk
y5ex2NuJrh1jbbDjQdnm3VPL2IWXY1BUqB32KjxtWyOxgkfL5aYrnNuhS3X+
vqXnCqbt9uLRn22HrKCY88+Jq3ijzGIi/WEHRA+8qzTlITAWKAUDiakd8C7u
uJjfBgKjbviqpnZuB4zfdFvw3ExgRH5aKXJq7YArJsXbEiwJjCUL0ugHhU64
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
rsSapzbFvn9ER1OvKWtXTAqxZwOXNW88HRWYPnX18szFz3dOUr0S6Ui0KtDx
8boXmF/+u7/sSzoaMuK6trUxGywepW/5L4Mtl6me7L/FgOucUf2tb+koIeDm
6aGzv+DzBf9n2z/S0bm4H2+yBCtgrMvpUEwuHd0JC809q14F8gfM+aYK6Gh0
+Oi/BelaOPp98y/r72z5dNGZH7X1EK2+7vqbInb/R+n1WSZNUP5sSYerjI62
c4jePXmiBTj5esbcKujoRy8PuGi0gf6132mFVez48e33pNR2OD+a7SRVz67H
z3mZQ0c74LVjvHBgMx3duptw5lROB3T9/q+isZ2OPrt7Hr/W3gFi+qdCdHro
KFCTVDde0wHWr60NHw6w7Ts0r2bFdECYmO7M+Ai7XtViYeaKHcAI25hlOUFH
1bLfzn3ia4fZWYrbq2k6KnuT9WWfTyuouY9toCzQUbTUk4hlv2Zwq6utPbZC
R0VJ0fXXlBohwezrXUziQnFhu8NSIuug5uMLMwkqF2KYVsfoZVWDycMLn2r5
uJCatUl46Y0yCCAdOaMpxIUs7auDL90thOxzxnL3RLlQspLecfQlF6SsBR5Z
SHMh0c1WuwT6HuDDeM4yVY4LRYjKqZDPfcD31Do4ScpcqLpdwa2MxcAr3G99
v2hyISYO/IUzKrDO1ceqotu40KH74YdyA6vwmeHAHl99LiTpqhiY4lGLXzic
fPoP2Pofnrs3cDfgllJLWzVTLvTC62TCcdcmLKSnzR1uwYW2rnd12+nUgvek
r//Zb8n2b3bDK26pFQeJcFw13c+FmhZ1tibotOP8kCGt53ZcyOOg5b1Rjg48
Of1veNmeC11MW3oTp9OBlU7mpTg4cSHxp4+d/TQ7sEtN0pGcY1zo2hI/89tY
O441CRMUcudCh8VmWuvXtOPKbO/fPl5cKJ31bUfLt1ZMlTl08483F3I0fDvX
taYFG9431Ff25UK7iLz/ec01Yj+CPCvkEhdSNboouC+8/n8Nl3c81W8Ux9F2
1/d7URqaSFa0RPSc+hGFCClSSEOoJGUkiWjJyMhIScheWVmP7dr3XnsrLasl
I6Hf/fP7+n6f5znn83mf85wvTrtKSx5yE4TK7Pb5lIZW/Kn/91m4KwiF/aGr
uFUcbFRcwf3zUBByW36uSRGqxoqulll2kYJQ1Dpe7R+ShlgrbnVKRgvCh/0T
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
mSent3VXY4f9bxYpCJNg/PjDI+PHhThDiS/p3kqSNwtvFPqzPAJ/VzDR7xIl
YWzU1yTrbBqSl86aklvLO//FG42wV2XIbgslylOMBOz62tWqphYlrzv3X8cG
ErwTBz5obGtGIyLFwzKbSd6N0qliFsZGUoyVAR7ivP0cL6+Ij2lGF5df3dMm
SUL000Tyb3wdiudn9W7bRkJc7560x1Xl6OPsRi93GRLYX6f3dGRkoi2/Xba1
yJHQakb2M04G4LPj3OatCiT4Ctdf67Z6h6M/y9x020FCXXJaWcU4bz4buLeO
s4sErqLZzGROA17f1VcuoUTy5g9V+2Vb2NiMu+eSqzIJ70oCHAzXsHFkvT+j
eR8Je6s+GF3zaMDdlV9ztuwnYWHdxr7MwCosWnLAzBlI8LrcHnvaPB+fyIsQ
aDxIgqhLQIVCpg8OzZhI2KRBQrpnrIwA/1uUlyxw6agmCe6NMVM2eeWoM57c
duswLx8T0SeFy+rQ7KuNw2+0SViU82dNZWYTWhu1PbFVl4Qb0bulataxkWrY
/kv8+iRsEqlsNHVsQmeCdLfJG5CQ9Ujh0t8nteiOn9mwqREJH08pyx1bUo6i
H9om3jcmYajCyV0FMlH5PddL2SdJeCA/5rjD9xEeuvNw23tTEh5e9TR75J2H
F98KG6adJuF5tOkKlReVWPLmm0QVcxLGc1Md+LTrsea13EsXLUk4s8Wh1JDZ
jK3tqrYFW5GQGf3px/Aj3jx3sXW49DwJEw/rddfFNeDks0OJ4xdJ6Ei/zvc6
tRo3nP51aY0NCVNWK/WafIvwt5P80pp2JDAVzo7/PfEKM4yIketXSBjMu1tw
8GACUtDbkBRtT0Jvtk/Yy1CMDI7I2zQ68PjYXf5+hFWDrmuoSc86kiDSv+no
tGQjCgadEUknEjaznQ/e025GuftOJRm68PL/O71ixXQj6thjY+Nxi8d7jS7f
Q51aNKPoIp16m6enXM1vdlMZWiP3YKTrDgkf1GTf1sZloH1Sz5KWevLq8d3y
Yv/8AGy2Jd5m5z0SHmfaZHK98rH7+hxpCx8S7hXRIq2WVOGXqytHfB/w9E9W
TF5lUY9LhVuS3j0iQTWyb+JKSBN+z/hg89mXhPjJU8zt6k1YgPJTWsifhKZ1
rqcbHOqw+FK+URRIQu7pt7rv/SuwBj8j2S6IhIq16s8XGrLxhTkx2/AQEvhG
IhzXDMnhB9OyMtXPSPDLl+RjJ2ejxF/7Rn+Fk3B2sFh5j3MFqhs/krzhOQlb
Jr88oB2uQ6NfTWx1XpDwwmWs981UI6J+tJZxiSbBaMgaV9GakPyA02hcDAnb
QsQcXj+oQ3rdPsncWF59xdk/nGBXIPu2ENt/8SSsCNvgXWSdg56yY2VkE0mw
WNt0PGybFXpb/3b0ZDIJt9SuNpb/l41bq8uTvVNJ6GMMjb3Wq8CTZRzbrHSe
XsfuvVm/pg6vLB6UGcgkQbJna5J6QiPem/99lJLN0ytk0MTIpxGbvF1I3ptL
wn+yUmddcmqxaxrN7nw+CUeW2yUsSS3HzxPXyT4tIGHAJUfnRXgWLo6VGSsp
IkEq36qc2u+F+l+qpIyWkOBR0Gmgvi8P8UUethMtIyF1U8/MzJ1KtCn0pKxG
BQllhxo2ZpTWoYOBF8euVZHgondq2y//RnTO92bKixoSvg04cEX9GpD3fW+7
+loSCk9kvzrbVYPiPYNlZ+pJoO7xUHSjlCLW7ddj4k0k9F+TE7KPTEDDzlkp
x9gkOMeVfMVbY3B8CksWc0nwmZhw4lhifG6wP0W2jQSzxDc/JxELbxKelI3o
4OXvIoRj6hpwvyYldVk3r5+sOz2i7NuAn9/aJHejl8f/X8E31Y9qsEm6UuqH
fh4vB775X1AsxiuHdOX03/PqJ/T3q/mX4bh15bnU4iESJGQSCo7ZZ6LAI65y
Mp95fAvt9PeRqEBH3QNSw76ScH9H8cMfR+oQNStebukoCQdYq1qDRhtQ7aei
1OvjJORz7LXO+9chn9Utcu+/k/Cj/pyOa0QFUtcdTj36iwS5qfx3P92yEP/d
f3JFv3n+nthjfLMsBJdki6RtmyZBJ8J67r+zRdjtq4z8sz8kRMqx5mskarDy
uoNpi+dI2P2Jz9t5vh5P6Z2Ud1ggwWnwR3J2Rz3O9rqSNsDHhDPrza7m5Vbj
a3n35HUXMUF2g8T8/KJCLD8akVawhAkzGdx7u6ef4LH1mfJSy5kguVFFw0aO
Vw8GNWkhgkx4IKOZ8GxHJbrg0ye/iMaEuHbZa8/C6pB4wUSaPYMJPpdn2dOr
GtD78RXb+0kmsKMdG23Ps9CLTRvTtYWZkBARYUGRLUVmx/dsf7eSCec3mR4z
KH+NVj/USZdczYSsxZ0tr7kpuL3o7PbgtUwQNp7oHJstw8E/nNP51zPhh96G
FUInarGBuP/2qxuZUJ5DM+geqMeMk3HpvZuZ4B5zYxefSC1ueFy4/YgEEwTW
fuL74FqGH2FOet5WJtgoq68yJJOw5sSX7RLSTPjo5azuxIpHi7cupD+VZcLp
v/NrVWtLUbmpsALfdibstfQQWAhm8e4D6YzLikywbB5xuv6oHqmWg0LPTias
X0flNDBq0eykcYbWHiZMPXHvnI4qQ3nbLivk7mWC90/PPL2MJOR42itjyz4m
aMXF3b1iGY93BIYrBKoxof9iwXPFd6X4e2V6xgJiQumE0vySmyycMlOlYHeQ
p99MwKJ+5XpsI9ub0aXO009txH36KgtLWfxS0NRkgmjNnvMBcaX4U9DyzOzD
TCBONnI1yuNwTM16xc06TJB+57n2g1cysvi7K9P/KBOW+Pz8wSwrQ2LbtRXn
9ZlQHbDrhucwC3Wftcy0MWRCfJbVQlN7HQoLdVLsPM4Ex/ym8QvratDxuieZ
GieZEL3Ub9PZhSLEXHit+NaUCfZa9gKf3EIRW7Egc+NpXn59U9wjY1n4yXm2
op85L/6gDSecMyrwkfDPmX8tmfCo7PdP0cRavLxxTvHSOSYMxZ45JkPW4So+
oaz2C0xwXtQmt7KxEnvu2rZD/RITFE0u6S7M5WCwRlmZtkxgrW5bLOnohf4H
10orGA==
        "]]},
      Annotation[#, "Charting`Private`Tag$32177025#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.302584952019448, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1095.5703125, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2.302584952019448, 4.6051700450134945`}, {-20, 20}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->FrontEndValueCache[{Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
     Automatic}, {{{-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.1\"", 0.1, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{3.9372965125409613`*^9, 3.9373148111178427`*^9},
 CellLabel->
  "Out[483]=",ExpressionUUID->"b23b52df-c8c9-4bc9-8505-114ca55c7eb6"]
}, Open  ]],

Cell[TextData[StyleBox["Another way to find F000:", "Subsection"]], "Text",
 CellChangeTimes->{{3.924072247097995*^9, 
  3.924072273856064*^9}},ExpressionUUID->"c70db317-3ca8-48ef-b84e-\
ca8289cf7fe6"],

Cell[TextData[{
 "We also recognize that ",
 Cell[BoxData[
  SubsuperscriptBox["\[Integral]", "x", "\[Infinity]"]],ExpressionUUID->
  "351942a5-27a6-4e13-80c2-154f6953c3ea"],
 "du ",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", "\[ImaginaryI]", " ", "u"}]], "u"], 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["B", "2"], "2"], "+", 
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], "4"], "+", 
     RowBox[{"B", " ", 
      RowBox[{"Log", "[", "u", "]"}]}], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "u", "]"}], "2"], "2"]}], ")"}]}]],
  CellChangeTimes->{{3.92063724074894*^9, 3.920637295229726*^9}, {
   3.920637595600864*^9, 3.92063761545678*^9}, {3.920637938473309*^9, 
   3.920637959488039*^9}},ExpressionUUID->
  "d7a7a4e9-81df-42d0-a84a-1821ae5f39f3"],
 " is basically ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     SuperscriptBox["B", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "4"]}]}]],
  CellChangeTimes->{{3.92063724074894*^9, 3.920637295229726*^9}, {
   3.920637595600864*^9, 3.92063761545678*^9}, {3.920637938473309*^9, 
   3.920637959488039*^9}},ExpressionUUID->
  "ef313483-ca34-4b91-96e5-4012423e97af"],
 ") F0 + B F1 + ",
 Cell[BoxData[
  FractionBox["F2", "2"]],
  CellChangeTimes->{{3.92063724074894*^9, 3.920637295229726*^9}, {
   3.920637595600864*^9, 3.92063761545678*^9}, {3.920637938473309*^9, 
   3.920637959488039*^9}},ExpressionUUID->
  "5a0e9da2-1c41-4e78-9173-9dd336d0aae6"],
 ". Then, we can ALSO find F000 using the previous results: "
}], "Text",
 CellChangeTimes->{{3.9206387920646677`*^9, 3.920638902708199*^9}, {
  3.9206392008529587`*^9, 3.920639201406425*^9}, {3.922857187927387*^9, 
  3.9228571913295507`*^9}, {3.9240720363414288`*^9, 
  3.924072045189188*^9}},ExpressionUUID->"dc922db2-89d3-4e28-af20-\
815e6af05be5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"F0", " ", "=", " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], ";"}],
   " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F1", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
      RowBox[{"HypergeometricPFQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "24"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"12", " ", 
         SuperscriptBox["EulerGamma", "2"]}], "-", 
        RowBox[{"12", " ", "\[ImaginaryI]", " ", "EulerGamma", " ", "\[Pi]"}],
         "-", 
        SuperscriptBox["\[Pi]", "2"], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
        RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"Log", "[", 
          FractionBox["x", "2"], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"EulerGamma", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Log", "[", "x", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], "+", 
        RowBox[{"Log", "[", 
         RowBox[{"4", " ", "x"}], "]"}]}], ")"}]}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F2", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "24"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       SuperscriptBox["EulerGamma", "3"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[Pi]", "3"]}], "-", 
      RowBox[{"96", " ", "\[ImaginaryI]", " ", "x", " ", 
       RowBox[{"HypergeometricPFQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
      RowBox[{"12", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["EulerGamma", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          RowBox[{"Log", "[", "2", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "2", "]"}], "2"]}], "+", 
      RowBox[{"2", " ", "EulerGamma", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], "+", 
         RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
          RowBox[{"Log", "[", "2", "]"}]}], "-", 
         RowBox[{"12", " ", 
          SuperscriptBox[
           RowBox[{"Log", "[", "2", "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", 
       RowBox[{"Log", "[", "4", "]"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Log", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"24", " ", "\[ImaginaryI]", " ", "x", " ", 
          RowBox[{"HypergeometricPFQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", "EulerGamma"}], "+", 
            RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "-", 
            RowBox[{"6", " ", 
             RowBox[{"ExpIntegralEi", "[", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "]"}]}], "+", 
            RowBox[{"Log", "[", "64", "]"}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"Log", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Log", "[", "2", "]"}], "3"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0lim", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "B"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
    RowBox[{"Log", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F1lim", " ", "=", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox["B", "2"], "2"], "+", 
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], "12"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F2lim", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["B", "3"], "3"]}], "-", 
     FractionBox[
      RowBox[{"B", " ", 
       SuperscriptBox["\[Pi]", "2"]}], "6"], "-", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "x"}], "+", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "x", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "3"], "3"], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Zeta", "[", "3", "]"}]}], "3"]}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.920638921359083*^9, 3.920638961115272*^9}, {
  3.920638993194132*^9, 
  3.9206390614181232`*^9}},ExpressionUUID->"68c2cc97-0166-4933-a7a0-\
a9ba6bbee3a1"],

Cell["Then", "Text",
 CellChangeTimes->{{3.920639065054265*^9, 
  3.920639066927724*^9}},ExpressionUUID->"1e563ab8-3d94-457a-a27a-\
0a09e6fe70bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["B", "2"], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Pi]", "2"], "4"]}], ")"}], " ", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"-", "B"}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
        RowBox[{"Log", "[", "x", "]"}]}], ")"}]}], " ", "+", " ", 
     RowBox[{"B", 
      RowBox[{"(", " ", 
       RowBox[{
        FractionBox[
         SuperscriptBox["B", "2"], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Pi]", "2"], "12"], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "2"], "2"]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["B", "3"], "3"]}], "-", 
        FractionBox[
         RowBox[{"B", " ", 
          SuperscriptBox["\[Pi]", "2"]}], "6"], "-", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "x"}], "+", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "x", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "3"], "3"], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"Zeta", "[", "3", "]"}]}], "3"]}], ")"}]}]}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"x", ">", "0"}]}]}], " ", "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.920639068855976*^9, 3.920639139776874*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"79bbd6dc-2f4a-4bd9-9a30-a2785cbc81ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["B", "3"], "6"]}], "-", 
  FractionBox[
   RowBox[{"B", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "4"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "B", " ", "x"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["B", "2"], " ", "x"}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", "x"}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["B", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "B", " ", "x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "B", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "x", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "3"], "6"], "-", 
  FractionBox[
   RowBox[{"Zeta", "[", "3", "]"}], "3"]}]], "Output",
 CellChangeTimes->{3.9206391406390963`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"776b1994-d4e1-4ad5-b6ee-a50534d15340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["B", "3"], "6"]}], "-", 
      FractionBox[
       RowBox[{"B", " ", 
        SuperscriptBox["\[Pi]", "2"]}], "4"], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["B", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], "6"], "-", 
      FractionBox[
       RowBox[{"Zeta", "[", "3", "]"}], "3"]}], ")"}], " ", "/.", " ", 
    RowBox[{"B", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"-", "\[Alpha]"}], "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "2"], "+", "2"}]}]}], " ", 
   "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.9207117337782297`*^9, 3.920711760481674*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"229e2b45-52c3-4850-a0df-7c17844eba12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["4", "3"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "4"], "+", 
  FractionBox[
   RowBox[{"5", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[Pi]", "3"]}], "48"], "+", 
  RowBox[{"2", " ", "\[Alpha]"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]"}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], " ", "\[Alpha]"}], "8"], "-", 
  SuperscriptBox["\[Alpha]", "2"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  FractionBox[
   SuperscriptBox["\[Alpha]", "3"], "6"], "-", 
  RowBox[{"2", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "+", 
  RowBox[{"2", " ", "\[Alpha]", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "\[Alpha]",
    " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "-", 
  SuperscriptBox[
   RowBox[{"Log", "[", "x", "]"}], "2"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[Alpha]", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], "3"], "6"], "-", 
  FractionBox[
   RowBox[{"Zeta", "[", "3", "]"}], "3"]}]], "Output",
 CellChangeTimes->{3.9207117611601133`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"69d594d8-a42d-4f99-9c97-ea70320fc68e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{99, Automatic}, {-117, Automatic}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 207, 4, 98, "Title",ExpressionUUID->"bd1bd40e-8e34-4af5-8e05-e3441e089826"],
Cell[CellGroupData[{
Cell[812, 30, 376, 6, 67, "Section",ExpressionUUID->"732eb4ea-0e53-4460-9b20-061ed4962f19"],
Cell[1191, 38, 1598, 43, 135, "Text",ExpressionUUID->"041a21ee-c876-40e3-a88f-22e0e300a7c5"],
Cell[2792, 83, 272, 5, 35, "Text",ExpressionUUID->"6cf40c67-8701-42c9-8c35-424916340870"],
Cell[CellGroupData[{
Cell[3089, 92, 576, 14, 51, "Input",ExpressionUUID->"ca65e952-8d31-47a1-bb26-76a0ce03d84a"],
Cell[3668, 108, 269, 6, 34, "Output",ExpressionUUID->"1d7b790a-d407-4163-8d14-5f83155bc761"]
}, Open  ]],
Cell[3952, 117, 1629, 37, 43, "Text",ExpressionUUID->"9c40c974-ed39-4fa9-bf33-051d42471636"],
Cell[CellGroupData[{
Cell[5606, 158, 1363, 31, 47, "Input",ExpressionUUID->"9efbd545-95ea-4af2-aec2-7b108325d7e4"],
Cell[6972, 191, 595, 12, 34, "Output",ExpressionUUID->"112197a0-8c96-4b65-b653-4c8046575e92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7604, 208, 1133, 26, 30, "Input",ExpressionUUID->"e9e5fec5-9b11-4cc8-a628-71ea703c4525"],
Cell[8740, 236, 603, 13, 50, "Output",ExpressionUUID->"07b04a08-ac91-45ee-b5e7-5322c013b1c9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9392, 255, 427, 7, 67, "Section",ExpressionUUID->"8241ecec-f20f-4909-9483-5c0a3e053684"],
Cell[CellGroupData[{
Cell[9844, 266, 612, 15, 51, "Input",ExpressionUUID->"e79aa541-3ace-49de-9875-e3745a51285c"],
Cell[10459, 283, 1436, 40, 50, "Output",ExpressionUUID->"b5117a72-b83d-4bee-af11-f49b36fd252d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11932, 328, 2279, 58, 86, "Input",ExpressionUUID->"778ced74-be6f-444c-8b8a-794553661aec"],
Cell[14214, 388, 507, 13, 53, "Output",ExpressionUUID->"e4c8458a-cb1a-423b-8838-be2abdbfcadf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14758, 406, 822, 22, 53, "Input",ExpressionUUID->"22ba770f-91d7-426b-9cf7-50ad7833fef9"],
Cell[15583, 430, 729, 17, 53, "Output",ExpressionUUID->"ad32f1aa-b65b-43ae-bacb-5f738e943fd9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16361, 453, 473, 7, 67, "Section",ExpressionUUID->"34637003-3ebd-4b5b-bd35-970361c73b30"],
Cell[16837, 462, 1623, 43, 135, "Text",ExpressionUUID->"7dfe1a8b-307a-43b8-9ede-e99559fe8c50"],
Cell[CellGroupData[{
Cell[18485, 509, 691, 17, 51, "Input",ExpressionUUID->"b9eab174-89a4-4543-9918-e3433dc01564"],
Cell[19179, 528, 2787, 71, 74, "Output",ExpressionUUID->"80340655-5f36-4063-a42e-c575ea368f36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22003, 604, 3920, 92, 164, "Input",ExpressionUUID->"4297d214-b5b5-4cea-8eaa-86eba21590e6"],
Cell[25926, 698, 783, 21, 54, "Output",ExpressionUUID->"3dfc9b3e-c287-49c8-8dee-4c4a34ab26d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26746, 724, 1101, 30, 53, "Input",ExpressionUUID->"2eeb20d9-730a-44a5-9e67-7225165b57bb"],
Cell[27850, 756, 1327, 35, 54, "Output",ExpressionUUID->"3914aa81-f723-4180-838c-f15e23c89ea7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29226, 797, 182, 3, 67, "Section",ExpressionUUID->"18632fee-cbde-487d-b4d0-7301422430ce"],
Cell[29411, 802, 830, 23, 45, "Text",ExpressionUUID->"252ffd23-3741-4064-b25b-445507a1e4b1"],
Cell[30244, 827, 161, 3, 35, "Text",ExpressionUUID->"d38df616-95cd-41a5-a0a3-dc92b4294c4f"],
Cell[CellGroupData[{
Cell[30430, 834, 1040, 25, 51, "Input",ExpressionUUID->"b0efa3ac-e835-402f-b712-b6d983b0fb23"],
Cell[31473, 861, 1267, 33, 54, "Output",ExpressionUUID->"8a6b4f50-bf11-463d-9b3e-126e74423bc9"]
}, Open  ]],
Cell[32755, 897, 162, 3, 35, "Text",ExpressionUUID->"53250064-f022-4c05-840d-6b78323dfe25"],
Cell[CellGroupData[{
Cell[32942, 904, 2245, 53, 51, "Input",ExpressionUUID->"28da2d6e-ac99-4226-84e9-10f27c1cc2cf"],
Cell[35190, 959, 2361, 64, 74, "Output",ExpressionUUID->"6d754ccb-6616-4708-8a18-bfcb5e90bbc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37588, 1028, 3714, 85, 131, "Input",ExpressionUUID->"00b26f78-7987-4d7e-87b6-4640656bd63f"],
Cell[41305, 1115, 1388, 32, 53, "Output",ExpressionUUID->"59210783-57a3-46b5-acf6-8ee0c3751d09"]
}, Open  ]],
Cell[42708, 1150, 212, 5, 35, "Text",ExpressionUUID->"75ab2a21-27fb-45d0-8c7f-fd89274dfc2b"],
Cell[CellGroupData[{
Cell[42945, 1159, 2245, 56, 53, "Input",ExpressionUUID->"a0366b17-6fa4-4d11-9562-1e407bd97b6e"],
Cell[45193, 1217, 270, 7, 54, "Output",ExpressionUUID->"b03c8f14-e201-4b38-85c2-b668e8d4c925"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45512, 1230, 270, 4, 67, "Section",ExpressionUUID->"ef2bace2-6f95-4030-93a9-4647338be956"],
Cell[CellGroupData[{
Cell[45807, 1238, 691, 20, 51, "Input",ExpressionUUID->"16d9ef8d-46ea-4724-af7c-f5c72c298159"],
Cell[46501, 1260, 455, 13, 54, "Output",ExpressionUUID->"7f7362f8-bce7-470e-ade6-bffd0a819fd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46993, 1278, 1006, 28, 51, "Input",ExpressionUUID->"a305525a-e24a-4361-96f0-9fdef06f23de"],
Cell[48002, 1308, 2256, 66, 75, "Output",ExpressionUUID->"2347a6e7-37e6-4005-8b71-29550fe11f0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50295, 1379, 3208, 81, 133, "Input",ExpressionUUID->"e095e99c-e081-4112-b60c-ae79c57666ae"],
Cell[53506, 1462, 1641, 46, 54, "Output",ExpressionUUID->"a1fb089e-f038-4683-89b0-e6eb9690fa8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55184, 1513, 873, 26, 47, "Input",ExpressionUUID->"41ac9869-47fd-45a5-8193-81210b3a415c"],
Cell[56060, 1541, 236, 5, 34, "Output",ExpressionUUID->"550ed9d5-86de-4c31-a284-3d9a0e835922"]
}, Open  ]],
Cell[56311, 1549, 1224, 32, 64, "Text",ExpressionUUID->"7c92e33f-c62a-416b-877d-f3e9d0bfa28b"],
Cell[57538, 1583, 4032, 112, 123, "Text",ExpressionUUID->"4c928773-269a-48b0-a5ff-0b451c1039df"],
Cell[61573, 1697, 400, 8, 35, "Text",ExpressionUUID->"fa5b116f-f171-4a80-9b49-9e0caa58c129"],
Cell[CellGroupData[{
Cell[61998, 1709, 1373, 35, 53, "Input",ExpressionUUID->"16f3156b-ce36-43b5-980c-f78378bf8c2a"],
Cell[63374, 1746, 663, 17, 53, "Output",ExpressionUUID->"212bbdf5-0e27-47e2-a5df-7ac763f2eeb0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64086, 1769, 286, 5, 67, "Section",ExpressionUUID->"7a8af83d-9477-4918-b290-b22e0807101e"],
Cell[64375, 1776, 644, 18, 53, "Input",ExpressionUUID->"d60b7627-a0f4-43a5-bce1-3a497cc72950"],
Cell[CellGroupData[{
Cell[65044, 1798, 1194, 33, 51, "Input",ExpressionUUID->"413ae50c-a2ec-4ac1-a217-1498cdbbc830"],
Cell[66241, 1833, 976, 26, 54, "Output",ExpressionUUID->"048e06da-4720-4f57-8bec-fa31b1f26867"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67254, 1864, 1455, 36, 53, "Input",ExpressionUUID->"358f6f1d-6e70-493c-b2c3-a9e4850410bf"],
Cell[68712, 1902, 1488, 34, 54, "Output",ExpressionUUID->"297f5646-7679-47a6-9ee9-8b602a6934a6"]
}, Open  ]],
Cell[70215, 1939, 257, 6, 35, "Text",ExpressionUUID->"f5770a08-d834-4c03-8414-b2e66415b544"],
Cell[CellGroupData[{
Cell[70497, 1949, 3506, 102, 241, "Input",ExpressionUUID->"2a1e7767-c18c-4c72-b4d6-9b9fc0e664ad"],
Cell[74006, 2053, 11482, 210, 235, "Output",ExpressionUUID->"ca1c5d4f-8bcc-4b8b-8c7d-a653b8e71dfd"],
Cell[85491, 2265, 23971, 459, 460, "Output",ExpressionUUID->"165751b6-c62a-454d-81ee-468d28109f0f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109511, 2730, 234, 4, 67, "Section",ExpressionUUID->"b23a5cf0-5446-4607-a58f-aefc69c1fa62"],
Cell[109748, 2736, 692, 20, 53, "Input",ExpressionUUID->"9e4516e5-085f-4196-a720-26bbc7f754a5"],
Cell[110443, 2758, 2205, 60, 88, "Text",ExpressionUUID->"0a78d8d3-ad25-46c3-bdc8-2477ef8985ce"],
Cell[112651, 2820, 320, 8, 81, "Text",ExpressionUUID->"55afc319-4a60-49c1-81ef-6f05768abb3b"],
Cell[112974, 2830, 2578, 65, 133, "Input",ExpressionUUID->"a6974696-1972-4144-8e98-643322184649"],
Cell[CellGroupData[{
Cell[115577, 2899, 1239, 30, 53, "Input",ExpressionUUID->"a8dee2a0-f461-41ba-84e4-4170a55fc98e"],
Cell[116819, 2931, 2891, 76, 95, "Output",ExpressionUUID->"e436fc3b-4048-44e7-9771-e6067a4ee737"]
}, Open  ]],
Cell[119725, 3010, 165, 3, 35, "Text",ExpressionUUID->"be1b69b3-9e2b-43ad-ba8f-e2413df814d5"],
Cell[CellGroupData[{
Cell[119915, 3017, 4689, 113, 153, "Input",ExpressionUUID->"12ad425b-5c17-4fe5-a670-7e153d5e9822"],
Cell[124607, 3132, 2660, 72, 54, "Output",ExpressionUUID->"fbfb06db-a395-4412-870a-b1b099f67e27"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127316, 3210, 499, 8, 67, "Section",ExpressionUUID->"d64d27af-e71f-4c9a-92d6-fc76325ab39d"],
Cell[127818, 3220, 1144, 33, 45, "Text",ExpressionUUID->"779d342b-533f-41d6-a21f-7dd7cd99c54c"],
Cell[128965, 3255, 3126, 86, 139, "Input",ExpressionUUID->"0cc8f90c-5187-4540-ab0b-b47b2acb4bfe"],
Cell[CellGroupData[{
Cell[132116, 3345, 3908, 92, 185, "Input",ExpressionUUID->"7b4f0fdc-91be-49dd-986b-355370fadfd8"],
Cell[136027, 3439, 2735, 74, 75, "Output",ExpressionUUID->"69aebd96-845d-4206-9d50-6238e9941211"]
}, Open  ]],
Cell[138777, 3516, 334, 7, 35, "Text",ExpressionUUID->"efcb5493-4fad-4d75-8bc6-3ade4d9dc9bc"],
Cell[CellGroupData[{
Cell[139136, 3527, 1363, 35, 53, "Input",ExpressionUUID->"9100a942-c72a-4519-ab69-84848b4aff26"],
Cell[140502, 3564, 5283, 147, 178, "Output",ExpressionUUID->"f6659fe5-254f-4a36-946e-171049c4371b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145822, 3716, 6851, 165, 229, "Input",ExpressionUUID->"2d573361-6197-44c5-a7f0-fb377c564d46"],
Cell[152676, 3883, 852, 26, 54, "Output",ExpressionUUID->"e4d889fb-995e-4bcd-988f-60e81d99c0b8"]
}, Open  ]],
Cell[153543, 3912, 270, 6, 35, "Text",ExpressionUUID->"361ba24b-7266-4c3d-ae4c-8141bdae093a"],
Cell[CellGroupData[{
Cell[153838, 3922, 7226, 189, 340, "Input",ExpressionUUID->"dd668ded-6f46-40ae-86d5-5a74a9ffbcfc"],
Cell[161067, 4113, 107772, 1786, 570, "Output",ExpressionUUID->"786d64db-a8c5-4be3-b5b8-5a9db0b708e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268876, 5904, 1596, 44, 94, "Input",ExpressionUUID->"a6be8775-798a-45fb-bd58-50458add9310"],
Cell[270475, 5950, 75935, 1288, 707, "Output",ExpressionUUID->"b23b52df-c8c9-4bc9-8505-114ca55c7eb6"]
}, Open  ]],
Cell[346425, 7241, 201, 3, 41, "Text",ExpressionUUID->"c70db317-3ca8-48ef-b84e-ca8289cf7fe6"],
Cell[346629, 7246, 1919, 51, 47, "Text",ExpressionUUID->"dc922db2-89d3-4e28-af20-815e6af05be5"],
Cell[348551, 7299, 6229, 169, 258, "Input",ExpressionUUID->"68c2cc97-0166-4933-a7a0-a9ba6bbee3a1"],
Cell[354783, 7470, 146, 3, 35, "Text",ExpressionUUID->"1e563ab8-3d94-457a-a27a-0a09e6fe70bf"],
Cell[CellGroupData[{
Cell[354954, 7477, 2052, 55, 53, "Input",ExpressionUUID->"79bbd6dc-2f4a-4bd9-9a30-a2785cbc81ab"],
Cell[357009, 7534, 1462, 40, 54, "Output",ExpressionUUID->"776b1994-d4e1-4ad5-b6ee-a50534d15340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358508, 7579, 1257, 36, 53, "Input",ExpressionUUID->"229e2b45-52c3-4850-a0df-7c17844eba12"],
Cell[359768, 7617, 1968, 55, 54, "Output",ExpressionUUID->"69d594d8-a42d-4f99-9c97-ea70320fc68e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

